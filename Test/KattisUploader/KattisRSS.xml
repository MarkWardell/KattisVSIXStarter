<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recent Problems - Kattis</title>
    <description>Kattis Recent Problems RSS Feed</description>
    <link>https://open.kattis.com</link>
    <atom:link href="https://open.kattis.com/rss/new-problems" rel="self" type="application/rss+xml" />
    <image>
      <title>Recent Problems - Kattis</title>
      <url>https://open.kattis.com/images/kattis/judge.png</url>
      <link>https://open.kattis.com</link>
      <description>Kattis</description>
      <width>48</width>
      <height>48</height>
    </image>
    <item>
      <title>Bee House Perimeter</title>
      <link>https://open.kattis.com/problems/beehouseperimeter</link>
      <guid>https://open.kattis.com/problems/beehouseperimeter</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Alice is a queen bee living in Beeland (a honeycomb
        structure described by &lt;span class=
        &quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt;, the number of cells of the side
        of honeycomb). The cells in Beeland are numbered from
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$R^3 - (R-1)^3$&lt;/span&gt; in row major order.
        For example for &lt;span class=&quot;tex2jax_process&quot;&gt;$R = 3$&lt;/span&gt;,
        the Beeland that Alice lives in looks like this:&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/beehouseperimeter/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=3cm]{beeland.png}&quot; style=
        &quot;width:3cm&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;Now Alice lives in a house that occupies &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; &lt;b class=&quot;bfseries&quot;&gt;adjacent&lt;/b&gt;
        cells in Beeland. You are Bob, the knight bee. You need to
        protect Alice’s house, but first you need to know the length of
        its &lt;b class=&quot;bfseries&quot;&gt;outer&lt;/b&gt; perimeter (the number of
        outermost sides of Alice’s house). The illustration below shows
        the visualizations of Sample Inputs/Outputs &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;.&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/beehouseperimeter/file/statement/en/img-0002.png&quot;
        alt=&quot;\includegraphics[width=8cm]{beeland23.png}&quot; style=
        &quot;width:8cm&quot;&gt;
        &lt;/center&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of two integers:
        &lt;span class=&quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt;. (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq R \leq 50$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq K
        \leq R^3 - (R-1)^3$&lt;/span&gt;). The second line contains
        &lt;span class=&quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; unique integers that
        describe the indices of Alice’s house, where each integer is in
        the range &lt;span class=
        &quot;tex2jax_process&quot;&gt;$[1,R^3-(R-1)^3]$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Print an integer in one line: The perimeter of Alice’s
        house.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 1
        7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 6
        5 6 7 11 15 18
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;24
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 7
        5 6 11 15 18 14 9
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;20
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Cave Exploration</title>
      <link>https://open.kattis.com/problems/caveexploration</link>
      <guid>https://open.kattis.com/problems/caveexploration</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Alice is a soccer coach who occasionally bring her soccer
        team to explore Caveland (that can be modeled as an undirected
        unweighted connected graph) for special event, e.g. for
        initiation ceremony, to celebrate birthdays, etc. Caveland has
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; junctions and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; tunnels.&lt;/p&gt;
        &lt;p&gt;Caveland is quite prone to flooding, but that does not stop
        Alice and her soccer team from doing what they enjoy. You are
        Bob, Alice’s good friend. You want to ensure Alice and her
        soccer team are as safe as possible by letting her know which
        junction(s) is/are safe(r) than the rest. You decide that a
        junction &lt;span class=&quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt; is considered
        to be safe(r) if &lt;b class=&quot;bfseries&quot;&gt;any one tunnel&lt;/b&gt; is
        flooded, Alice and her soccer team can still go out from
        junction &lt;span class=&quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt; to the
        entrance of Caveland (which is always junction &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;) via a non-flooded path.&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/caveexploration/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=8cm]{caveland.png}&quot; style=
        &quot;width:8cm&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;For this example, junctions &lt;span class=
        &quot;tex2jax_process&quot;&gt;$\{ 0, 1, 2, 3\} $&lt;/span&gt; are considered
        safe(r). If tunnel &lt;span class=&quot;tex2jax_process&quot;&gt;$0–2$&lt;/span&gt;
        is flooded for example, Alice and her soccer team can detour
        via path &lt;span class=&quot;tex2jax_process&quot;&gt;$2 \rightarrow 3
        \rightarrow 1 \rightarrow 0$&lt;/span&gt; to reach Caveland entrance.
        However junctions &lt;span class=&quot;tex2jax_process&quot;&gt;$\{ 4, 5, 6, 7,
        8\} $&lt;/span&gt; are quite dangerous. If tunnel &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2–8$&lt;/span&gt; (or tunnel &lt;span class=
        &quot;tex2jax_process&quot;&gt;$3–4$&lt;/span&gt;) is flooded, Alice and her
        soccer team will be trapped (cannot reach safety/junction
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;).&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; integers: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;. (&lt;span class=&quot;tex2jax_process&quot;&gt;$2
        \leq N \leq 10\, 000$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq M \leq min(N(N-1)/2, 100\, 000)$&lt;/span&gt;). The next
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; lines contains
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; pairs of integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$u$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt; that describe &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;-based indices of the two junctions
        that are connected with a tunnel in Caveland (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \leq u, v &amp;lt; N$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$u \neq v$&lt;/span&gt;). You are guaranteed that
        junction &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; can reach all
        the other &lt;span class=&quot;tex2jax_process&quot;&gt;$N-1$&lt;/span&gt; junctions
        (if there is no flood).&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Print an integer in one line: The total number of
        junction(s) in Caveland that is/are safe(r) for Alice and her
        soccer team to explore. The actual junction numbers are not
        needed.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;9 10
        0 1
        0 2
        1 3
        2 3
        2 8
        3 4
        4 5
        4 6
        5 7
        6 7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Classical Counting</title>
      <link>https://open.kattis.com/problems/classicalcounting</link>
      <guid>https://open.kattis.com/problems/classicalcounting</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You have &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; objects,
        each with &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; copies. How
        many ways are there to take exactly &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; of them?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains three integers,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; respectively, subjected to
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N, M, K \leq
        10^5$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the number of ways. As the number of ways could be
        large, &lt;b class=&quot;bfseries&quot;&gt;output them modulo&lt;/b&gt; &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^6 + 7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;10 1 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;45
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 3 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;10
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 2 7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Fooling Around</title>
      <link>https://open.kattis.com/problems/foolingaround</link>
      <guid>https://open.kattis.com/problems/foolingaround</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Alice and Bob take turns playing a game, with Alice going
        first. They begin with a pile of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; stones, each turn removing one
        less than a prime number of stones. The person who removes the
        last stone wins. Given &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, determine who wins the the
        game.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of a integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$Q$&lt;/span&gt;, the number of testcases, with
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq Q \leq 100$&lt;/span&gt;. The
        next &lt;span class=&quot;tex2jax_process&quot;&gt;$Q$&lt;/span&gt; lines each
        contains a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, representing the number of stones
        in the pile, where &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq
        10^9$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;For each test case, output the winner “&lt;tt class=
        &quot;ttfamily&quot;&gt;Alice&lt;/tt&gt;” or “&lt;tt class=&quot;ttfamily&quot;&gt;Bob&lt;/tt&gt;”. Each
        testcase’s output should be printed on their own line.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        1
        2
        3
        5
        8
        13
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;Alice
        Alice
        Bob
        Alice
        Bob
        Alice
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Grid Game</title>
      <link>https://open.kattis.com/problems/gridgame</link>
      <guid>https://open.kattis.com/problems/gridgame</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Given a &lt;span class=&quot;tex2jax_process&quot;&gt;$N \times N$&lt;/span&gt;
        grid of integers, we can choose a combination of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; numbers where no two in the same
        row and no two in the same column. We aim to find a combination
        of &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; numbers whose
        minimum is maximized.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq N \leq 30$&lt;/span&gt;. The next
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines each contains
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; integers, representing
        the grid. Each integer is in the range &lt;span class=
        &quot;tex2jax_process&quot;&gt;$[1..10^6]$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single integer, representing the maximum possible
        value of the minimum.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        3 1 4
        1 5 1
        2 9 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        17 24 1 8 15
        23 5 7 14 16
        4 6 13 20 22
        10 12 19 21 3
        11 18 25 2 9
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;21
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Knight Search</title>
      <link>https://open.kattis.com/problems/knightsearch</link>
      <guid>https://open.kattis.com/problems/knightsearch</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Alice is a chess knight living in Chessland (an &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N \times N$&lt;/span&gt; board). The cells in
        Chessland are numbered from &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N^2$&lt;/span&gt; in row major order. Each cell
        has an UPPERCASE alphabet character assigned to it. The
        Chessland is described by a string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; of length &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N^2$&lt;/span&gt; (in row major order). For
        example for &lt;span class=&quot;tex2jax_process&quot;&gt;$N = 5$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; =
        “IXIXXXXCXAXSXXPXXCSXAGXXX”, the Chessland that Alice lives in
        looks like this:&lt;/p&gt;
        &lt;pre&gt;
        12345
        -----
        1|IXIXX
        2|XXCXA
        3|XSXXP
        4|XXCSX
        5|AGXXX
        &lt;/pre&gt;
        &lt;p&gt;As Alice is a chess knight, she can only move from cell
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(a, b)$&lt;/span&gt; to cell
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(c, d)$&lt;/span&gt; in Chessland if
        and only if &lt;span class=&quot;tex2jax_process&quot;&gt;$(a-c)^2 + (b-d)^2 =
        5$&lt;/span&gt;. Alice wonder if she can find her favorite string
        “&lt;tt class=&quot;ttfamily&quot;&gt;ICPCASIASG&lt;/tt&gt;” in Chessland by starting
        from a cell with character ‘&lt;tt class=&quot;ttfamily&quot;&gt;I&lt;/tt&gt;’ and
        finds the other &lt;span class=&quot;tex2jax_process&quot;&gt;$9$&lt;/span&gt;
        characters by jumping around in Chessland using chess knight
        movements. Alice can visit the same cell more than once.&lt;/p&gt;
        &lt;p&gt;You are of course Bob the computing bee and your job is to
        help her decide the answer.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of 1 integer: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq N \leq 100$&lt;/span&gt;). The second line contains a string
        &lt;span class=&quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N^2$&lt;/span&gt; UPPERCASE characters
        [‘&lt;tt class=&quot;ttfamily&quot;&gt;A&lt;/tt&gt;’..‘&lt;tt class=&quot;ttfamily&quot;&gt;Z&lt;/tt&gt;’]
        that describe Chessland.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Print “&lt;tt class=&quot;ttfamily&quot;&gt;YES&lt;/tt&gt;” if Alice can find
        string “&lt;tt class=&quot;ttfamily&quot;&gt;ICPCASIASG&lt;/tt&gt;” in Chessland or
        print “&lt;tt class=&quot;ttfamily&quot;&gt;NO&lt;/tt&gt;” otherwise.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        IXIXXXXCXAXSXXPXXCSXAGXXX
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;YES
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        THEQUICKBROWNFOXJUMPSOVER
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;NO
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Making Palindromes</title>
      <link>https://open.kattis.com/problems/makingpalindromes</link>
      <guid>https://open.kattis.com/problems/makingpalindromes</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;An &lt;b class=&quot;bfseries&quot;&gt;alphabetical string&lt;/b&gt; is a string
        consisting of &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; or more
        capital letters (i.e. [‘&lt;tt class=
        &quot;ttfamily&quot;&gt;A&lt;/tt&gt;’..‘&lt;tt class=&quot;ttfamily&quot;&gt;Z&lt;/tt&gt;’]). Given an
        alphabetical string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S[1..N]$&lt;/span&gt;, determine the number of
        palindromic alphabetical strings of length &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2N$&lt;/span&gt; that contains &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; as a subsequence (not necessarily
        contiguous). A string is palindromic if it is equal to its
        reverse.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input is an integer representing
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, constrained to
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq N \leq 200$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;The second line of input is an alphabetical string
        &lt;span class=&quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; of length &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the number of palindromic alphabetical strings of
        length &lt;span class=&quot;tex2jax_process&quot;&gt;$2N$&lt;/span&gt; containing
        &lt;span class=&quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; as a subsequence. As
        this could be rather large, output it modulo &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        AA
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;51
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        AB
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Modulo Data Structures</title>
      <link>https://open.kattis.com/problems/modulodatastructures</link>
      <guid>https://open.kattis.com/problems/modulodatastructures</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You have an array, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$Arr[1...N]$&lt;/span&gt;. Initially, all values of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$Arr[i] = 0$&lt;/span&gt;. The array
        supports the following two types of queries:&lt;/p&gt;
        &lt;ol class=&quot;enumerate&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;Increase all &lt;span class=
        &quot;tex2jax_process&quot;&gt;$Arr[k]$&lt;/span&gt; by &lt;span class=
        &quot;tex2jax_process&quot;&gt;$C$&lt;/span&gt; for all &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k\equiv A\ (\mathrm{mod}$&lt;/span&gt;
        &lt;span class=&quot;tex2jax_process&quot;&gt;$B)$&lt;/span&gt;;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Output &lt;span class=&quot;tex2jax_process&quot;&gt;$Arr[D]$&lt;/span&gt; for
        a given &lt;span class=&quot;tex2jax_process&quot;&gt;$D$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ol&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first two lines of input consists of two integers,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$Q$&lt;/span&gt;, representing the length of the
        array and the number of queries, respectively. Note that
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N,Q \leq 200\,
        000$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;The following &lt;span class=&quot;tex2jax_process&quot;&gt;$Q$&lt;/span&gt; lines
        all begin with an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt; representing the type of query. If
        &lt;span class=&quot;tex2jax_process&quot;&gt;$T = 1$&lt;/span&gt;, then it will be
        followed by three integers representing &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$C$&lt;/span&gt; respectively. Note that
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq C \leq 10\, 000$&lt;/span&gt;,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq A &amp;lt; B \leq N$&lt;/span&gt;.
        Else, &lt;span class=&quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt; will be
        &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, and it will be
        followed by one integer representing &lt;span class=
        &quot;tex2jax_process&quot;&gt;$D$&lt;/span&gt;, subjected to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq D \leq N$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;For each query of type &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, output the integer value of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$Arr[D]$&lt;/span&gt; on a separate
        line.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 10
        1 1 2 7
        1 4 5 6
        1 2 3 3
        2 1
        2 2
        2 3
        1 3 4 3
        2 3
        2 4
        2 5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;7
        3
        7
        10
        6
        10
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Swap to Sort</title>
      <link>https://open.kattis.com/problems/swaptosort</link>
      <guid>https://open.kattis.com/problems/swaptosort</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You are given an array &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A[1...N]$&lt;/span&gt; with integers in decreasing
        order and a list of pairs &lt;span class=&quot;tex2jax_process&quot;&gt;$(a_1,
        b_1)$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$(a_2,
        b_2),$&lt;/span&gt; &lt;span class=&quot;tex2jax_process&quot;&gt;$\ldots $&lt;/span&gt;,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(a_ K, b_ K)$&lt;/span&gt;. You wish
        to sort the array &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; in
        increasing order, each turn you choose an &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; can be chosen multiple times) and
        swap &lt;span class=&quot;tex2jax_process&quot;&gt;$A[a_ i]$&lt;/span&gt; with
        &lt;span class=&quot;tex2jax_process&quot;&gt;$A[b_ i]$&lt;/span&gt;. Determine
        whether this is possible.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line contains two integers, representing
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; respectively (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq N, K \leq 10^6$&lt;/span&gt;). The
        following &lt;span class=&quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; lines each
        contains two integers, representing &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a_ i$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b_ i$&lt;/span&gt; respectively (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq a_ i &amp;lt; b_ i \leq N$&lt;/span&gt;).&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output “&lt;tt class=&quot;ttfamily&quot;&gt;Yes&lt;/tt&gt;” if it is possible to
        sort the array in increasing order, “&lt;tt class=
        &quot;ttfamily&quot;&gt;No&lt;/tt&gt;” otherwise.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 2
        1 5
        2 4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;Yes

        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 4
        1 4
        2 3
        4 5
        1 5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;No
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Unicyclic Count</title>
      <link>https://open.kattis.com/problems/unicycliccount</link>
      <guid>https://open.kattis.com/problems/unicycliccount</guid>
      <pubDate>Sat, 15 Sep 2018 04:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;A &lt;b class=&quot;bfseries&quot;&gt;unicyclic graph&lt;/b&gt; is a graph with
        exactly one cycle. A &lt;b class=&quot;bfseries&quot;&gt;spanning subgraph&lt;/b&gt;
        of a graph &lt;span class=&quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt; is a
        subgraph that has one component and includes all the vertices
        of &lt;span class=&quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;. Given a simple
        graph &lt;span class=&quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;, count the
        number of spanning unicyclic subgraphs. The illustration below
        shows the visualization of Sample Input/Output &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;.&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/unicycliccount/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=0.9\textwidth ]{sampleio1.png}&quot;
        style=&quot;width:90.00%&quot;&gt;
        &lt;/center&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input contains two integers,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$V$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$E$&lt;/span&gt;, representing the number of
        vertices and edges of the graph &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt; respectively. (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq V \leq 17, 0 \leq E \leq
        V(V-1)/2$&lt;/span&gt;.)&lt;/p&gt;
        &lt;p&gt;The following &lt;span class=&quot;tex2jax_process&quot;&gt;$E$&lt;/span&gt; lines
        each contains two integers &lt;span class=&quot;tex2jax_process&quot;&gt;$A_
        i$&lt;/span&gt; and &lt;span class=&quot;tex2jax_process&quot;&gt;$B_ i$&lt;/span&gt;,
        representing an edge &lt;span class=&quot;tex2jax_process&quot;&gt;$(A_ i, B_
        i)$&lt;/span&gt;. It is guaranteed that &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq A_ i &amp;lt; B_ i \leq V$&lt;/span&gt; and as
        the graph is simple, no two pairs represent the same edge.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output one integer, representing the number of spanning
        unicylic subgraphs. As the number can be rather big, output it
        modulo &lt;span class=&quot;tex2jax_process&quot;&gt;$10^9 + 7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 5
        1 2
        1 3
        2 3
        1 4
        2 4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 2
        1 2
        3 4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Wireless is the New Fiber</title>
      <link>https://open.kattis.com/problems/newfiber</link>
      <guid>https://open.kattis.com/problems/newfiber</guid>
      <pubDate>Thu, 19 Apr 2018 06:06:18 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;A new type of unbounded-bandwidth wireless communication has
        just been tested and proved to be a suitable replacement for
        the existing, fiber-based communications network, which is
        struggling to keep up with traffic growth. You have been
        charged with deciding the layout of the new communications
        network. The current communications network consists of a set
        of nodes (which route messages), and links of fiber, each of
        which connects two different nodes. For each pair of nodes,
        there exists at least one way (but possibly more, for bandwidth
        purposes) to travel along the fiber between the two.&lt;/p&gt;
        &lt;p&gt;The new communications network will not have any fiber.
        Instead, it will have wireless links, each connecting two
        nodes. These links have unbounded bandwidth but are expensive,
        so it has been decided that as few of these links will be built
        as possible to provide connectivity; for each pair of nodes
        there should be exactly one way to travel between them along
        the wireless links. Moreover, you discovered that the nodes
        have each been built with a particular number of connections in
        mind. For each node, if it will be connected to a different
        number of links than it is today, it will have to be
        reorganized, and that is costly.&lt;/p&gt;
        &lt;p&gt;Your task is to design the new network so that it has
        precisely one path between each pair of nodes while minimizing
        the number of nodes that do not have the same number of
        connections as in the original network. Figure&amp;nbsp;1 shows the
        original network and a solution for Sample Input 1.&lt;/p&gt;
        &lt;div id=&quot;fiber:sample1&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;table cellspacing=&quot;0&quot; class=&quot;tabular&quot;&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:left&quot;&gt;
        &lt;p&gt;&lt;img src=
        &quot;/problems/newfiber/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=8cm]{fiber1}&quot; style=
        &quot;width:8cm&quot;&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=&quot;text-align:left&quot;&gt;
        &lt;p&gt;&lt;img src=
        &quot;/problems/newfiber/file/statement/en/img-0002.png&quot;
        alt=&quot;\includegraphics[width=8cm]{fiber2}&quot; style=
        &quot;width:8cm&quot;&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:left&quot;&gt;
        &lt;p&gt;(a) The original fiber network.&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=&quot;text-align:left&quot;&gt;
        &lt;p&gt;(b) One possible solution. The number of links has
        changed for three nodes: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt;.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Illustration of Sample Input 1.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input begins with a line containing two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$2 \leq n \leq 10^4$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq m \leq 10^5$&lt;/span&gt;), denoting the number of nodes and the
        number of fiber links in the existing network. The nodes are
        numbered from &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; to
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt;. Each of the next
        &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; lines contains two
        distinct integers &lt;span class=&quot;tex2jax_process&quot;&gt;$a_ i$&lt;/span&gt;
        and &lt;span class=&quot;tex2jax_process&quot;&gt;$b_ i$&lt;/span&gt;, denoting the
        fact that the &lt;span class=&quot;tex2jax_process&quot;&gt;$i^{\text
        {th}}$&lt;/span&gt; fiber link connects nodes numbered &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a_ i$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b_ i$&lt;/span&gt;. It is guaranteed that for each
        pair of nodes there exists at least one path connecting the two
        nodes. Any pair of nodes may have more than one fiber link
        connecting them.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the smallest number of nodes for which the number of
        connected links needs to change. Starting on the next line,
        display a system of connections in the same format as the
        input. That is, display a line containing the number of nodes
        (this will be the same as in the input) and the number of
        wireless links, and then on subsequent lines descriptions of
        the links. If more than one layout is possible, any valid
        layout will be accepted.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;7 11
        0 1
        0 2
        0 5
        0 6
        1 3
        2 4
        1 2
        1 2
        1 5
        2 6
        5 6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        7 6
        0 1
        0 2
        0 5
        0 6
        3 6
        4 6

        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 3
        0 1
        2 1
        2 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        4 3
        2 1
        1 3
        0 2

        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Uncrossed Knight&#039;s Tour</title>
      <link>https://open.kattis.com/problems/uncrossedknights</link>
      <guid>https://open.kattis.com/problems/uncrossedknights</guid>
      <pubDate>Thu, 19 Apr 2018 06:02:42 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;A well-known puzzle is to “tour” all the squares of an
        &lt;span class=&quot;tex2jax_process&quot;&gt;$8 \times 8$&lt;/span&gt; chessboard
        using a knight, which is a piece that can move only by jumping
        one square in one direction and two squares in an orthogonal
        direction. The knight must visit every square of the
        chessboard, without repeats, and then return to its starting
        square. There are many ways to do this, and the chessboard size
        is manageable, so it is a reasonable puzzle for a human to
        solve.&lt;/p&gt;
        &lt;p&gt;However, you have access to a computer, and some coding
        skills! So, we will give you a harder version of this problem
        on a rectangular &lt;span class=&quot;tex2jax_process&quot;&gt;$m \times
        n$&lt;/span&gt; chessboard with an additional constraint: the knight
        may never cross its own path. If you imagine its path
        consisting of straight line segments connecting the centers of
        squares it jumps between, these segments must form a simple
        polygon; that is, no two segments intersect or touch, except
        that consecutive segments touch at their common end point. This
        constraint makes it impossible to visit every square, so
        instead you must maximize the number of squares the knight
        visits. We keep the constraint that the knight must return to
        its starting square. Figure&amp;nbsp;1 shows an optimal solution
        for the first sample input, a &lt;span class=&quot;tex2jax_process&quot;&gt;$6
        \times 6$&lt;/span&gt; board.&lt;/p&gt;
        &lt;div id=&quot;fig:sixbysix&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/uncrossedknights/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=0.3\textwidth ]{sixbysix.pdf}&quot;
        style=&quot;width:30.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: An optimal solution for a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$6 \times 6$&lt;/span&gt; board.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input consists of a single line containing two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le m \le 8$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n \le 10^{15}$&lt;/span&gt;), giving the dimensions of the
        rectangular chessboard.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the largest number of squares that a knight can
        visit in a tour on an &lt;span class=&quot;tex2jax_process&quot;&gt;$m \times
        n$&lt;/span&gt; chessboard that does not cross its path. If no such
        tour exists, display &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6 6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;12
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;8 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;7 20
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;80
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 4&lt;/th&gt;
        &lt;th&gt;Sample Output 4&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2 6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Triangles</title>
      <link>https://open.kattis.com/problems/triangles3</link>
      <guid>https://open.kattis.com/problems/triangles3</guid>
      <pubDate>Thu, 19 Apr 2018 05:54:12 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;For your trip to Beijing, you have brought plenty of puzzle
        books, many of them containing challenges like the following:
        how many triangles can be found in Figure&amp;nbsp;1?&lt;/p&gt;
        &lt;div id=&quot;fig:example_puzzle&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/triangles3/file/statement/en/img-0001.png&quot; alt=
        &quot;\includegraphics[width=0.38\textwidth ]{sample1}&quot; style=
        &quot;width:38.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Illustration of Sample Input 2.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;p&gt;While these puzzles keep your interest for a while, you
        quickly get bored with them and instead start thinking about
        how you might solve them algorithmically. Who knows, maybe a
        problem like that will actually be used in this year’s contest.
        Well, guess what? Today is your lucky day!&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains two integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq r \le 3\, 000$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le c \leq 6\, 000$&lt;/span&gt;), specifying the picture size, where
        &lt;span class=&quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; is the number of rows
        of vertices and &lt;span class=&quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; is the
        number of columns. Following this are &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2r-1$&lt;/span&gt; lines, each of them having at
        most &lt;span class=&quot;tex2jax_process&quot;&gt;$2c-1$&lt;/span&gt; characters.
        Odd lines contain grid vertices (represented as lowercase
        &lt;tt class=&quot;ttfamily&quot;&gt;x&lt;/tt&gt; characters) and zero or more
        horizontal edges, while even lines contain zero or more
        diagonal edges. Specifically, picture lines with numbers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$4k+1$&lt;/span&gt; have vertices in
        positions &lt;span class=&quot;tex2jax_process&quot;&gt;$1, 5, 9, 13, \ldots
        $&lt;/span&gt; while lines with numbers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$4k+3$&lt;/span&gt; have vertices in positions
        &lt;span class=&quot;tex2jax_process&quot;&gt;$3, 7, 11, 15, \ldots
        $&lt;/span&gt;&amp;nbsp;. All possible vertices are represented in the
        input (for example, see how Figure&amp;nbsp;1 is represented in
        Sample Input 2). Horizontal edges connecting neighboring
        vertices are represented by three dashes. Diagonal edges are
        represented by a single forward slash (‘&lt;tt class=
        &quot;ttfamily&quot;&gt;/&lt;/tt&gt;’) or backslash (‘&lt;tt&gt;\&lt;/tt&gt;’) character. The
        edge characters will be placed exactly between the
        corresponding vertices. All other characters will be space
        characters. Note that if any input line could contain trailing
        whitespace, that whitespace may be omitted.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the number of triangles (of any size) formed by grid
        edges in the input picture.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 3
        x---x
        \ /
        x
        / \
        x   x
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 10
        x   x---x---x   x
        \ /   / \
        x   x---x   x   x
        / \ / \   \
        x   x---x---x---x
        /   / \   \ / \
        x---x---x---x---x
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;12
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Single Cut of Failure</title>
      <link>https://open.kattis.com/problems/single</link>
      <guid>https://open.kattis.com/problems/single</guid>
      <pubDate>Thu, 19 Apr 2018 05:12:46 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;The Intrusion and Crime Prevention Company (ICPC) builds
        intrusion detection systems for homes and businesses. The
        International Collegiate Programming Contest (in a strange
        coincidence also known as ICPC) is considering hiring the
        company to secure the room that contains the problem set for
        next year’s World Finals.&lt;/p&gt;
        &lt;p&gt;The contest staff wants to prevent the intrusion attempts
        that were made in past years, such as rappelling down the
        outside of the building to enter through a window, crawling
        through air ducts, impersonating Bill Poucher, and the creative
        use of an attack submarine. For that reason, the problems will
        be stored in a room that has a single door and no other
        exits.&lt;/p&gt;
        &lt;p&gt;ICPC (the company) proposes to install sensors on the four
        sides of the door, where pairs of sensors are connected by
        wires. If somebody opens the door, any connected sensor pair
        will detect this and cause an alarm to sound.&lt;/p&gt;
        &lt;p&gt;The system has one design flaw, however. An intruder might
        cut the wires before opening the door. To assess the security
        of the system, you need to determine the minimum number of line
        segments that cut all wires. Figure&amp;nbsp;1 shows two
        configurations of wires on the door (corresponding to the two
        sample inputs), and minimum-size cuts that intersect all
        wires.&lt;/p&gt;
        &lt;div id=&quot;fig:cut1&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;table cellspacing=&quot;0&quot; class=&quot;tabular&quot;&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;
        &lt;p&gt;&lt;img src=
        &quot;/problems/single/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=6cm]{sample1}&quot; style=
        &quot;width:6cm&quot;&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;
        &lt;p&gt;&lt;img src=
        &quot;/problems/single/file/statement/en/img-0002.png&quot;
        alt=&quot;\includegraphics[width=6cm]{sample2}&quot; style=
        &quot;width:6cm&quot;&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;
        &lt;p&gt;(a) Four wires (blue) that can be intersected with
        a single cut (red).&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;
        &lt;p&gt;(b) Five wires that need two cuts.&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Illustrations of Sample Inputs 1 and 2.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input starts with a line containing three integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$w$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$h$&lt;/span&gt;, which represent the number of
        wires installed (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq n \leq
        10^6$&lt;/span&gt;) and the dimensions of the door (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq w, h \leq 10^8$&lt;/span&gt;). This is
        followed by &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; lines,
        each describing a wire placement. Each of these lines contains
        four integers &lt;span class=&quot;tex2jax_process&quot;&gt;$x_1$&lt;/span&gt;,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$y_1$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x_2$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y_2$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \leq x_1, x_2 \leq w$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \leq y_1, y_2 \leq h$&lt;/span&gt;), meaning
        that a wire goes from &lt;span class=&quot;tex2jax_process&quot;&gt;$(x_1,
        y_1)$&lt;/span&gt; to &lt;span class=&quot;tex2jax_process&quot;&gt;$(x_2,
        y_2)$&lt;/span&gt;. Each wire connects different sides of the door.
        No wire is anchored to any of the four corners of the door. All
        locations in the input are distinct.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display a minimum-size set of straight line cuts that
        intersect all wires. First, display the number of cuts needed.
        Then display the cuts, one per line in the format &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x_1$&lt;/span&gt; &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y_1$&lt;/span&gt; &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x_2$&lt;/span&gt; &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y_2$&lt;/span&gt; for the cut between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(x_1,y_1)$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(x_2,y_2)$&lt;/span&gt;. Each cut has to start and
        end on different sides of the door. Cuts cannot start or end
        closer than &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt; to
        any wire anchor location or any corner of the door.&lt;/p&gt;
        &lt;p&gt;Cuts may be displayed in any order. The start and end
        locations of each cut may be displayed in either order. If
        there are multiple sets of cuts with the same minimum size,
        display any of them.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 4 6
        0 1 4 4
        0 5 2 0
        0 3 3 6
        2 6 4 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        0 4 4 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 4 6
        0 2 2 0
        0 3 2 6
        1 6 3 0
        1 0 4 4
        3 6 4 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        0 4 4 4.5
        0 1 4 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Panda Preserve</title>
      <link>https://open.kattis.com/problems/pandapreserve</link>
      <guid>https://open.kattis.com/problems/pandapreserve</guid>
      <pubDate>Thu, 19 Apr 2018 05:04:57 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Last month, Sichuan province secured funding to establish
        the Great Panda National Park, a natural preserve for a
        population of more than &lt;span class=&quot;tex2jax_process&quot;&gt;$1\,
        800$&lt;/span&gt; giant pandas. The park will be surrounded by a
        polygonal fence. In order for researchers to track the pandas,
        wireless receivers will be placed at each vertex of the
        enclosing polygon and each animal will be outfitted with a
        wireless transmitter. Each wireless receiver will cover a
        circular area centered at the location of the receiver, and all
        receivers will have the same range. Naturally, receivers with
        smaller range are cheaper, so your goal is to determine the
        smallest possible range that suffices to cover the entire
        park.&lt;/p&gt;
        &lt;p&gt;As an example, Figure&amp;nbsp;1 shows the park described by the
        first sample input. Notice that a wireless range of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$35$&lt;/span&gt; does not suffice (a),
        while the optimal range of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$50$&lt;/span&gt; covers the entire park (b).&lt;/p&gt;
        &lt;div id=&quot;panda:sample 1&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;table class=&quot;subfigure&quot; id=&quot;a0000000005&quot; style=
        &quot;display:inline-table&quot;&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;img src=
        &quot;/problems/pandapreserve/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=10cm]{fig1a}&quot; style=
        &quot;width:10cm&quot;&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;(a) &lt;span&gt;An insufficient
        range for covering the park.&lt;/span&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;subfigure&quot; id=&quot;a0000000006&quot; style=
        &quot;display:inline-table&quot;&gt;
        &lt;tr&gt;
        &lt;td&gt;&lt;img src=
        &quot;/problems/pandapreserve/file/statement/en/img-0002.png&quot;
        alt=&quot;\includegraphics[width=10cm]{fig1b}&quot; style=
        &quot;width:10cm&quot;&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=&quot;text-align:center&quot;&gt;(b) &lt;span&gt;The minimal
        range for covering the park.&lt;/span&gt;&lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Illustration of Sample Input 1.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$3
        \leq n \leq 2\, 000$&lt;/span&gt;) specifying the number of vertices
        of the polygon bounding the park. This is followed by
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; lines, each containing
        two integers &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$|x|, |y| \leq 10^4$&lt;/span&gt;) that give the
        coordinates &lt;span class=&quot;tex2jax_process&quot;&gt;$(x, y)$&lt;/span&gt; of
        the vertices of the polygon in counter-clockwise order. The
        polygon is simple; that is, its vertices are distinct and no
        two edges of the polygon intersect or touch, except that
        consecutive edges touch at their common vertex.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the minimum wireless range that suffices to cover
        the park, with an absolute or relative error of at most
        &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        0 0
        170 0
        140 30
        60 30
        0 70
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;50
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        0 0
        170 0
        140 30
        60 30
        0 100
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;51.538820320
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        0 0
        1 2
        1 5
        0 2
        0 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1.581138830
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Go with the Flow</title>
      <link>https://open.kattis.com/problems/gowithflow</link>
      <guid>https://open.kattis.com/problems/gowithflow</guid>
      <pubDate>Thu, 19 Apr 2018 04:44:59 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;In typesetting, a “river” is a string of spaces formed by
        gaps between words that extends down several lines of text. For
        instance, Figure&amp;nbsp;1 shows several examples of rivers
        highlighted in red (text is intentionally blurred to make the
        rivers more visible).&lt;/p&gt;
        &lt;div id=&quot;fig:rivers&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/gowithflow/file/statement/en/img-0001.png&quot; alt=
        &quot;\includegraphics[width=0.7\textwidth ]{rivers4}&quot; style=
        &quot;width:70.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Examples of rivers in typeset text.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;p&gt;Celebrated river authority Flo Ng wants her new book on
        rivers of the world to include the longest typographic rivers
        possible. She plans to set the text in a mono-spaced font (all
        letters and spaces have equal width) in a left-aligned column
        of some fixed width, with exactly one space separating words on
        each line (the text is not aligned on the right). For Flo, a
        “river” is defined as a sequence of spaces lying in consecutive
        lines in which the position of each space in the sequence
        (except the first) differs by at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; from the position of the space in
        the line above it. Trailing white space cannot appear in a
        river. Words must be packed as tightly as possible on lines; no
        words may be split across lines. The line width used must be at
        least as long as the longest word in the text. For instance,
        Figure&amp;nbsp;2 shows the same text set with two different line
        widths.&lt;/p&gt;
        &lt;div id=&quot;fig:lengths&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;table cellspacing=&quot;0&quot; class=&quot;tabular&quot;&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:left&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Line width 14: River of length
        4&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:left; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Line width 15: River of length
        5&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:left&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;The Yangtze is&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:left; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;The Yangtze is&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;the
        third&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;the
        third&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;longest river&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;longest&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;river&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;in&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;Asia and&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;in Asia&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;and the&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;the&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;longest in&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;longest&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;in the&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;the&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;world to&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;world to&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;flow&amp;nbsp;&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black; border-left:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;flow&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;entirely&amp;nbsp;&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;text-align:left; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;entirely&lt;b class=
        &quot;bfseries&quot;&gt;*&lt;/b&gt;in one&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-bottom-style:solid; border-bottom-width:1px; border-left:1px solid black; border-right:1px solid black; text-align:left; border-bottom-color:black&quot;&gt;
        &lt;p&gt;&lt;tt class=&quot;ttfamily&quot;&gt;in one country&lt;b class=
        &quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-bottom-color:black; border-bottom-width:1px; text-align:left; border-bottom-style:solid; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;tt class=
        &quot;ttfamily&quot;&gt;country&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;b class=&quot;bfseries&quot;&gt;|&lt;/b&gt;&lt;/tt&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 2&lt;/b&gt;: Longest rivers (&lt;tt class=
        &quot;ttfamily&quot;&gt;&lt;b class=&quot;bfseries&quot;&gt;*&lt;/b&gt;&lt;/tt&gt;) for two
        different line widths.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;p&gt;Given a text, you have been tasked with determining the line
        width that produces the longest river of spaces for that
        text.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$2
        \leq n \leq 2\, 500$&lt;/span&gt;) specifying the number of words in
        the text. The following lines of input contain the words of
        text. Each word consists only of lowercase and uppercase
        letters, and words on the same line are separated by a single
        space. No word exceeds &lt;span class=
        &quot;tex2jax_process&quot;&gt;$80$&lt;/span&gt; characters.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the line width for which the input text contains the
        longest possible river, followed by the length of the longest
        river. If more than one line width yields this maximum, display
        the shortest such line width.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;21
        The Yangtze is the third longest
        river in Asia and the longest in
        the world to flow
        entirely in one country
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;15 5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;25
        When two or more rivers meet at
        a confluence other than the sea
        the resulting merged river takes
        the name of one of those rivers
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;21 6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Getting a Jump on Crime</title>
      <link>https://open.kattis.com/problems/gettingjump</link>
      <guid>https://open.kattis.com/problems/gettingjump</guid>
      <pubDate>Thu, 19 Apr 2018 04:43:38 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Your friend Robin is a superhero. When you first found out
        about this, you figured “everybody needs a hobby, and this
        seems more exciting than stamp collecting,” but now you are
        really thankful that somebody is doing something about the
        crime in your hometown.&lt;/p&gt;
        &lt;p&gt;Every night, Robin patrols the city by jumping from roof to
        roof and watching what goes on below. Naturally, superheroes
        need to respond to crises immediately, so Robin asked you for
        help in figuring out how to get around your hometown
        quickly.&lt;/p&gt;
        &lt;p&gt;Your hometown is built on a square grid, where each block is
        &lt;span class=&quot;tex2jax_process&quot;&gt;$w \times w$&lt;/span&gt; meters. Each
        block is filled by a single building. The buildings may have
        different heights (see Figure&amp;nbsp;1). To get from one building
        to another (not necessarily adjacent) building, Robin makes a
        single jump from the center of the roof of the first building
        to the center of the roof of the second building. Robin cannot
        change direction while in the air, but can choose the angle at
        which to lift off.&lt;/p&gt;
        &lt;div id=&quot;fig:jump&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/gettingjump/file/statement/en/img-0001.png&quot; alt=
        &quot;\includegraphics[width=0.95\textwidth ]{sample1}&quot; style=
        &quot;width:95.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Cross-section of buildings corresponding
        to the first sample input. Buildings are shown in black,
        and the jump from the roof at &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(1,1)$&lt;/span&gt; to the roof at
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(4,1)$&lt;/span&gt; is shown
        with a green line.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;p&gt;Of course, Robin only wants to perform jumps without
        colliding with any buildings. Such collisions do little damage
        to a superhero, but building owners tend to get irritated when
        someone crashes through their windows. You explain the physics
        to Robin: “All your jumps are done with the same initial
        velocity &lt;span class=&quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt;, which has a
        horizontal component &lt;span class=&quot;tex2jax_process&quot;&gt;$v_
        d$&lt;/span&gt; towards the destination and vertical component
        &lt;span class=&quot;tex2jax_process&quot;&gt;$v_ h$&lt;/span&gt; upwards, so
        &lt;span class=&quot;tex2jax_process&quot;&gt;$v_ d^2 + v_ h^2 = v^2$&lt;/span&gt;.
        As you travel, your horizontal velocity stays constant
        (&lt;span class=&quot;tex2jax_process&quot;&gt;$v_ d(t) = v_ d$&lt;/span&gt;), but
        your vertical velocity is affected by gravity (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$v_ h(t) = v_ h - t \cdot g$&lt;/span&gt;), where
        &lt;span class=&quot;tex2jax_process&quot;&gt;$g = 9.80665 \text { m}/\text
        {s}^2$&lt;/span&gt; in your hometown. Naturally, your cape allows you
        to ignore the effects of air resistance. This allows you to
        determine your flight path and ...” at which point you notice
        that Robin has nodded off – less math, more super-heroing!&lt;/p&gt;
        &lt;p&gt;So it falls to you: given a layout of the city and the
        location of Robin’s secret hideout, you need to determine which
        building roofs Robin can reach, and the minimum number of jumps
        it takes to get to each roof.&lt;/p&gt;
        &lt;p&gt;Note that if Robin’s jump passes over the corner of a
        building (where four buildings meet), then the jump needs to be
        higher than all four adjacent buildings.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input starts with a line containing six integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ x$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$d_ y$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$w$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$\ell _ x$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$\ell _ y$&lt;/span&gt;. These represent the size
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ x \times d_ y$&lt;/span&gt; of the
        city grid (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le d_ x,d_ y \le
        20$&lt;/span&gt;) in blocks, the width of each building (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le w \le 10^3$&lt;/span&gt;) in meters, Robin’s
        takeoff velocity (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le v \le
        10^3$&lt;/span&gt;) in meters per second, and the coordinates
        (&lt;span class=&quot;tex2jax_process&quot;&gt;$\ell _ x,\ell _ y$&lt;/span&gt;) of
        Robin’s secret hideout (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le
        \ell _ x \le d_ x$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le
        \ell _ y \le d_ y$&lt;/span&gt;).&lt;/p&gt;
        &lt;p&gt;The first line is followed by a description of the heights
        of the buildings in the city grid. The description consists of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ y$&lt;/span&gt; lines, each
        containing &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ x$&lt;/span&gt;
        non-negative integers. The &lt;span class=
        &quot;tex2jax_process&quot;&gt;$j^{th}$&lt;/span&gt; line contains the heights for
        buildings &lt;span class=&quot;tex2jax_process&quot;&gt;$(1,j), (2,j), \dots ,
        (d_ x,j)$&lt;/span&gt;. All heights are given in meters and are at
        most &lt;span class=&quot;tex2jax_process&quot;&gt;$10^3$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the minimum number of jumps Robin needs to get from
        the secret hideout to the roof of each building. If there is no
        way to reach a building’s roof, display &lt;tt class=
        &quot;ttfamily&quot;&gt;X&lt;/tt&gt; instead of the number of jumps. Display the
        buildings in the same order as given in the input file, split
        into &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ y$&lt;/span&gt; lines, each
        containing &lt;span class=&quot;tex2jax_process&quot;&gt;$d_ x$&lt;/span&gt;
        values.&lt;/p&gt;
        &lt;p&gt;You may assume that changing the height of any building by
        up to &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt; would not
        change the answers.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 1 100 55 1 1
        10 40 60 10
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0 1 1 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 4 100 55 1 1
        0 10 20 30
        10 20 30 40
        20 30 200 50
        30 40 50 60
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0 1 1 2
        1 1 1 2
        1 1 X 2
        2 2 2 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Gem Island</title>
      <link>https://open.kattis.com/problems/gemisland</link>
      <guid>https://open.kattis.com/problems/gemisland</guid>
      <pubDate>Thu, 19 Apr 2018 04:38:02 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Gem Island is a tiny island in the middle of the Pacific
        Ocean. Until recently, it was known as one of the poorest, but
        also most peaceful, places on Earth. Today, it is neither poor
        nor peaceful. What happened?&lt;/p&gt;
        &lt;p&gt;One sunny morning, not too long ago, all inhabitants of Gem
        Island woke up to a surprise. That morning, each of them
        suddenly held one sparkling gem in their hand. The gems had
        magically appeared overnight. This was cause for much rejoicing
        – everybody was suddenly rich, they could finally afford all
        the things they had ever dreamed of, and the name of their
        island made so much more sense now.&lt;/p&gt;
        &lt;p&gt;The next morning, one of the inhabitants woke up to another
        surprise – her gem had magically split into two gems! The same
        thing happened on each of the following nights, when exactly
        one of the gems (apparently uniformly at random among all the
        gems on the island) would split into two.&lt;/p&gt;
        &lt;p&gt;After a while, the inhabitants of Gem Island possessed a
        widely varying number of gems. Some had a lot and many had only
        a few. How come some inhabitants had more gems than others? Did
        they cheat, were they just lucky, or was something else at
        work?&lt;/p&gt;
        &lt;p&gt;The island elders have asked for your help. They want you to
        determine if the uneven distribution of gems is explained by
        pure chance. If so, that would greatly reduce tensions on the
        island.&lt;/p&gt;
        &lt;p&gt;The island has &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;
        inhabitants. You are to determine the gem distribution after
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt; nights of gem
        splitting. In particular, you are interested in the expected
        number of gems collectively held by the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; people with the largest numbers of
        gems. More formally, suppose that after &lt;span class=
        &quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt; nights the numbers of gems held by
        the &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; inhabitants are
        listed in non-increasing order as &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a_1 \ge a_2 \ge \ldots \ge a_ n$&lt;/span&gt;.
        What is the expected value of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a_1 + \dots + a_ r$&lt;/span&gt;?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input consists of a single line containing the three
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq n, d \leq 500$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \leq r \leq n$&lt;/span&gt;), as described in the problem statement
        above.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the expected number of gems that the top
        &lt;span class=&quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; inhabitants hold after
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt; nights, with an
        absolute or relative error of at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2 3 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;3.5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 3 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;4.9
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 10 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;12.2567433
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Conquer The World</title>
      <link>https://open.kattis.com/problems/conquertheworld</link>
      <guid>https://open.kattis.com/problems/conquertheworld</guid>
      <pubDate>Thu, 19 Apr 2018 04:22:44 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Bwahahahahaha!!! Your nemesis, the dashingly handsome spy
        Waco Powers, has at last fallen to your secret volcano base’s
        deathtraps (or so you assume, being a little too busy to
        witness it firsthand). At long last, you are all set to
        &lt;span class=&quot;scshape&quot;&gt;Conquer The World&lt;/span&gt;!&lt;/p&gt;
        &lt;p&gt;Nothing will stand in your way! Well, nothing except a minor
        problem of logistics. Your evil armies have announced that they
        will not continue carving their relentless path of destruction
        across the puny nations of the world without being paid. And
        unfortunately you are running low on cash – a volcano lair has
        many wonderful qualities, but “reasonably affordable” is not
        one of them. You have had to pull funds from the travel budget
        to pay your ungrateful underlings. Now you are not sure how you
        will actually get your armies into position to &lt;span class=
        &quot;scshape&quot;&gt;Conquer The World&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;You have a map of the nations of the world and all your
        available transport routes between them. Each route connects
        two nations and has a fixed cost per army that uses it. The
        routes are laid out such that there is exactly one way to
        travel between any two nations. You know the current position
        of each of your armies and how many you will need to place
        permanently in each nation in order to subjugate it. How can
        you move the armies into place as cheaply as possible so you
        can &lt;span class=&quot;scshape&quot;&gt;Conquer The World&lt;/span&gt;?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n \le 250\, 000$&lt;/span&gt;), the number of nations. This is
        followed by &lt;span class=&quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt; lines,
        each containing three integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$u$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le u, v \le n$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le c
        \le 10^6$&lt;/span&gt;), indicating that there is a bidirectional
        route connecting nations &lt;span class=
        &quot;tex2jax_process&quot;&gt;$u$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt;, which costs &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; per army to use.&lt;/p&gt;
        &lt;p&gt;Finally, another &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;
        lines follow, the &lt;span class=&quot;tex2jax_process&quot;&gt;$i^{\text
        {th}}$&lt;/span&gt; of which contains two non-negative integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$x_ i$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y_ i$&lt;/span&gt;, indicating that there are
        currently &lt;span class=&quot;tex2jax_process&quot;&gt;$x_ i$&lt;/span&gt; armies in
        nation &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;, and you need
        at least &lt;span class=&quot;tex2jax_process&quot;&gt;$y_ i$&lt;/span&gt; armies to
        end up in that nation in the final configuration. The total
        number of armies (the sum of the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x_ i$&lt;/span&gt; values) is at least the sum of
        the &lt;span class=&quot;tex2jax_process&quot;&gt;$y_ i$&lt;/span&gt; values, and no
        more than &lt;span class=&quot;tex2jax_process&quot;&gt;$10^6$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the minimum cost to move your armies such that there
        are at least &lt;span class=&quot;tex2jax_process&quot;&gt;$y_ i$&lt;/span&gt; armies
        in nation &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; for all
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        1 2 5
        3 1 5
        2 1
        5 0
        1 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;15
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        1 2 2
        1 3 5
        1 4 1
        2 5 5
        2 6 1
        0 0
        1 0
        2 1
        2 1
        0 1
        0 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;9
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Comma Sprinkler</title>
      <link>https://open.kattis.com/problems/comma</link>
      <guid>https://open.kattis.com/problems/comma</guid>
      <pubDate>Thu, 19 Apr 2018 04:08:44 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:17.50%&quot; class=&quot;illustration&quot;&gt;
        &lt;span style=&quot;width:600.0pt&quot; class=&quot;parbox&quot;&gt;&lt;img src=
        &quot;/problems/comma/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/comma/file/statement/en/img-0001.jpg&quot; class=
        &quot;illustration&quot;&gt;&lt;/span&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;span style=&quot;width:600.0pt&quot; class=&quot;parbox&quot;&gt;Photo by Tanya
        Hart. Yarn pattern by Morgen Dämmerung.&lt;/span&gt;
        &lt;/div&gt;
        &lt;/div&gt;&lt;span style=&quot;width:600.0pt&quot; class=&quot;parbox&quot;&gt;As practice
        will tell you, the English rules for comma placement are
        complex, frustrating, and often ambiguous. Many people, even
        the English, will, in practice, ignore them, and, apply custom
        rules, or, no rules, at all. Doctor Comma Sprinkler solved this
        issue by developing a set of rules that sprinkles commas in a
        sentence with no ambiguity and little simplicity. In this
        problem you will help Dr.&amp;nbsp;Sprinkler by producing an
        algorithm to automatically apply her rules.&lt;/span&gt;
        &lt;p&gt;Dr.&amp;nbsp;Sprinkler’s rules for adding commas to an existing
        piece of text are as follows:&lt;/p&gt;
        &lt;ol class=&quot;enumerate&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;If a word anywhere in the text is preceded by a comma,
        find all occurrences of that word in the text, and put a
        comma before each of those occurrences, except in the case
        where such an occurrence is the first word of a sentence or
        already preceded by a comma.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;If a word anywhere in the text is succeeded by a comma,
        find all occurrences of that word in the text, and put a
        comma after each of those occurrences, except in the case
        where such an occurrence is the last word of a sentence or
        already succeeded by a comma.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Apply rules&amp;nbsp;&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and&amp;nbsp;&lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; repeatedly until no new commas
        can be added using either of them.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ol&gt;
        &lt;p&gt;As an example, consider the text&lt;/p&gt;
        &lt;pre&gt;
        please sit spot. sit spot, sit. spot here now here.
        &lt;/pre&gt;
        &lt;p&gt;Because there is a comma after &lt;tt class=&quot;tt&quot;&gt;spot&lt;/tt&gt; in
        the second sentence, a comma should be added after &lt;tt class=
        &quot;tt&quot;&gt;spot&lt;/tt&gt; in the third sentence as well (but not the first
        sentence, since it is the last word of that sentence). Also,
        because there is a comma before the word &lt;tt class=
        &quot;tt&quot;&gt;sit&lt;/tt&gt; in the second sentence, one should be added
        before that word in the first sentence (but no comma is added
        before the word &lt;tt class=&quot;tt&quot;&gt;sit&lt;/tt&gt; beginning the second
        sentence because it is the first word of that sentence).
        Finally, notice that once a comma is added after &lt;tt class=
        &quot;tt&quot;&gt;spot&lt;/tt&gt; in the third sentence, there exists a comma
        before the first occurrence of the word &lt;tt class=
        &quot;tt&quot;&gt;here&lt;/tt&gt;. Therefore, a comma is also added before the
        other occurrence of the word &lt;tt class=&quot;tt&quot;&gt;here&lt;/tt&gt;. There
        are no more commas to be added so the final result is&lt;/p&gt;
        &lt;pre&gt;
        please, sit spot. sit spot, sit. spot, here now, here.
        &lt;/pre&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The input contains one line of text, containing at least
        &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; characters and at most
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1\, 000\, 000$&lt;/span&gt;
        characters. Each character is either a lowercase letter, a
        comma, a period, or a space. We define a &lt;em&gt;word&lt;/em&gt; to be a
        maximal sequence of letters within the text. The text adheres
        to the following constraints:&lt;/p&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;The text begins with a word.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Between every two words in the text, there is either a
        single space, a comma followed by a space, or a period
        followed by a space (denoting the end of a sentence and the
        beginning of a new one).&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The last word of the text is followed by a period with
        no trailing space.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the result after applying Dr.&amp;nbsp;Sprinkler’s
        algorithm to the original text.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;please sit spot. sit spot, sit. spot here now here.
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;
        please, sit spot. sit spot, sit. spot, here now, here.
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;
        one, two. one tree. four tree. four four. five four. six five.
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;
        one, two. one, tree. four, tree. four, four. five, four. six five.
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Catch the Plane</title>
      <link>https://open.kattis.com/problems/catch</link>
      <guid>https://open.kattis.com/problems/catch</guid>
      <pubDate>Thu, 19 Apr 2018 03:59:03 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Your plane to the ICPC Finals departs in a short time, and
        the only way to get to the airport is by bus. Unfortunately,
        some of the bus drivers are considering going on strike, so you
        do not know whether you can get to the airport on time. Your
        goal is to plan your journey in such a way as to maximize the
        probability of catching your plane.&lt;/p&gt;
        &lt;p&gt;You have a detailed map of the city, which includes all the
        bus stations. You are at station &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and the airport is at station
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;. You also have a
        complete schedule of when each bus leaves its start station and
        arrives at its destination station. Additionally, for each bus
        you know the probability that it is actually going to run as
        scheduled, as opposed to its driver going on strike and taking
        the bus out of service. Assume all these events are
        independent. That is, the probability of a given bus running as
        planned does not change if you know whether any of the other
        buses run as planned.&lt;/p&gt;
        &lt;p&gt;If you arrive &lt;em&gt;before&lt;/em&gt; the departure time of a bus,
        you can transfer to that bus. But if you arrive exactly at the
        departure time, you will not have enough time to get on the
        bus. You cannot verify ahead of time whether a given bus will
        run as planned – you will find out only when you try to get on
        the bus. So if two or more buses leave a station at the same
        time, you can try to get on only one of them.&lt;/p&gt;
        &lt;div id=&quot;fig:catch&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=&quot;/problems/catch/file/statement/en/img-0001.png&quot;
        alt=&quot;\includegraphics[width=0.5\textwidth ]{catch2}&quot; style=
        &quot;width:50.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Bus schedule corresponding to Sample
        Input 1.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;p&gt;Consider the bus schedule shown in Figure&amp;nbsp;1. It lists
        the start and destination stations of several bus routes along
        with the departure and arrival times. You have written next to
        some of these the probability that that route will run. Bus
        routes with no probability written next to them have a
        &lt;span class=&quot;tex2jax_process&quot;&gt;$100\% $&lt;/span&gt; chance of
        running. You can try catching the first listed bus. If it runs,
        it will take you straight to the airport, and you can stop
        worrying. If it does not, things get more tricky. You could get
        on the second listed bus to station &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;. It is certain to leave, but you
        would be too late to catch the third listed bus which otherwise
        would have delivered you to the airport on time. The fourth
        listed bus – which you can catch – has only a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0.1$&lt;/span&gt; probability of actually running.
        That is a bad bet, so it is better to stay at station
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and wait for the fifth
        listed bus. If you catch it, you can try to get onto the sixth
        listed bus to the airport; if that does not run, you still have
        the chance of returning to station 0 and catching the last
        listed bus straight to the airport.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains two integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le m \le 10^6$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$2
        \le n \le 10^6$&lt;/span&gt;), denoting the number of buses and the
        number of stations in the city. The next line contains one
        integer &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le k \le 10^{18}$&lt;/span&gt;), denoting the
        time by which you must arrive at the airport.&lt;/p&gt;
        &lt;p&gt;Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt;
        lines describes one bus. Each line contains integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$0
        \le a, b &amp;lt; n$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$a \ne
        b$&lt;/span&gt;), denoting the start and destination stations for the
        bus. Next are integers &lt;span class=&quot;tex2jax_process&quot;&gt;$s$&lt;/span&gt;
        and &lt;span class=&quot;tex2jax_process&quot;&gt;$t$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \le s &amp;lt; t \le k$&lt;/span&gt;), giving the
        departure time from station &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and the arrival time at station
        &lt;span class=&quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt;. The last value on the
        line is &lt;span class=&quot;tex2jax_process&quot;&gt;$p$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \le p \le 1$&lt;/span&gt;, with at most
        &lt;span class=&quot;tex2jax_process&quot;&gt;$10$&lt;/span&gt; digits after the
        decimal point), which denotes the probability that the bus will
        run as planned.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Display the probability that you will catch your plane,
        assuming you follow an optimal course of action. Your answer
        must be correct to within an absolute error of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;8 4
        1000
        0 1 0 900 0.2
        0 2 100 500 1.0
        2 1 500 700 1.0
        2 1 501 701 0.1
        0 3 200 400 0.5
        3 1 500 800 0.1
        3 0 550 650 0.9
        0 1 700 900 0.1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0.3124
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 2
        2
        0 1 0 1 0.5
        0 1 0 1 0.5
        0 1 1 2 0.4
        0 1 1 2 0.2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0.7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Boat Parts</title>
      <link>https://open.kattis.com/problems/boatparts</link>
      <guid>https://open.kattis.com/problems/boatparts</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=&quot;/problems/boatparts/file/statement/en/img-0001.jpg&quot;
        alt=&quot;/problems/boatparts/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        Photo by &lt;a href=
        &quot;https://www.flickr.com/photos/canozdemir/15507245678&quot;&gt;Can
        Mustafa Ozdemir&lt;/a&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;Boating season is over for this year, and Theseus has parked
        his boat on land. Of course, the boat looks nothing like it did
        as of the beginning of the season; it never does. You see,
        Theseus is constantly looking for ways to improve his boat.&lt;/p&gt;
        &lt;p&gt;At every day of the boating season, Theseus bought exactly
        one type of item at his local supply store, and replaced the
        existing part on his boat with it. Now, as the season has
        ended, Theseus wonders what day he replaced all the parts from
        the previous season.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of two space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, representing the
        number of parts the boat consists of, and the number of days in
        the boating season respectively.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines,
        each line has a single word &lt;span class=&quot;tex2jax_process&quot;&gt;$w_
        i$&lt;/span&gt;, the type of boat part that Theseus bought on day
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the day Theseus ended up replacing the last existing
        part from the previous season, or &lt;tt class=&quot;ttfamily&quot;&gt;paradox
        avoided&lt;/tt&gt; if Theseus never ended up replacing all the
        different parts.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq P \leq N \leq 1\,
        000$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Each word &lt;span class=&quot;tex2jax_process&quot;&gt;$w_ i$&lt;/span&gt;
        will consist only of the letters a–z and &lt;tt class=
        &quot;ttfamily&quot;&gt;_&lt;/tt&gt; (underscore).&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Each word &lt;span class=&quot;tex2jax_process&quot;&gt;$w_ i$&lt;/span&gt;
        will be between &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;
        and &lt;span class=&quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; characters
        long.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The number of distinct &lt;span class=&quot;tex2jax_process&quot;&gt;$w_
        i$&lt;/span&gt;s will be at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 5
        left_oar
        right_oar
        left_oar
        hull
        right_oar
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 5
        motor
        hull
        left_oar
        hull
        motor
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;paradox avoided
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Cross Country</title>
      <link>https://open.kattis.com/problems/crosscountry</link>
      <guid>https://open.kattis.com/problems/crosscountry</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Charles Johnson is on his way to meet his very good friend
        Bernard Terrell. They are going on their bi-weekly skiing trip.
        Today Charles had forgot all about the Kvikk Lunsj and had to
        go back home to get it. This has left him very late, and to
        make things worse all the parking spots close to the meeting
        spot has been taken. Given the workout diary of Charles, could
        you help find the fastest path to the meeting spot?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of three
        space-separated integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt;, representing the number of
        intersections in the ski tracks networks, the index of the
        intersection where Charles parked his car and the index of the
        intersection where Charles agreed to meet Bernard.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines.
        Each of the lines consists of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; space-separated integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$D_{ij}$&lt;/span&gt;. The integer on
        line &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; and column
        &lt;span class=&quot;tex2jax_process&quot;&gt;$j$&lt;/span&gt; describes the time in
        minutes it takes for Charles to get from intersection
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; to intersection
        &lt;span class=&quot;tex2jax_process&quot;&gt;$j$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;The output should be a single line consisting of the minimum
        number of minutes Charles will have to use to get to the
        meeting point to share some Kvikk Lunsj with Bernard.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq 1\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq S, T &amp;lt;
        N$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq D_{ij} &amp;lt; 10\,
        000$&lt;/span&gt; for &lt;span class=&quot;tex2jax_process&quot;&gt;$i \ne
        j$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$D_{ii} = 0$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 1 3
        0 1 3 14
        2 0 4 22
        3 10 0 7
        13 8 2 0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;11
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Cuboid Slicing Game</title>
      <link>https://open.kattis.com/problems/cuboidslicinggame</link>
      <guid>https://open.kattis.com/problems/cuboidslicinggame</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/cuboidslicinggame/file/statement/en/img-0001.png&quot;
        alt=
        &quot;/problems/cuboidslicinggame/file/statement/en/img-0001.png&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;Ruben and Albert are what you can call abnormally smart.
        They are also both very fond of mathematically inspired games.
        Their only problem is that most games are too easy for them,
        and they end up beating everyone who dares challenge them.
        Because of that, they’re now mostly playing against each other.
        To make things interesting, they had a professor design a new
        game for them.&lt;/p&gt;
        &lt;p&gt;This new game was interesting at first. Nowadays, however,
        Albert often complains that it is impossible for him to win a
        particular round. After long discussions, they’ve now decided
        to take this a step further, and actually figure out who’d win
        if they both played optimally. They need you to write a
        computer program that does this for them.&lt;/p&gt;
        &lt;p&gt;A state in the game consists of one or more &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x\times y\times z$&lt;/span&gt; cuboids. A (legal)
        move is choosing a cuboid, then a value for each of the three
        axes (basically choosing three planes), and then cutting the
        cuboid along these (thus removing a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1\times y\times z$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x\times 1\times z$&lt;/span&gt; and a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x\times y\times 1$&lt;/span&gt;, all overlapping,
        cuboid). In effect you’ve created between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$8$&lt;/span&gt; (inclusive) smaller cuboids. All
        three planes cut from the cuboid need to be on the cuboid (you
        can’t cut away a hypothetical cuboid on the outside of the real
        one).&lt;/p&gt;
        &lt;p&gt;An example might be in order. You’ve chosen a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$3\times 5\times 4$&lt;/span&gt; cuboid, and are
        about to cut it. You now need to choose the three planes. This
        means you need an &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt;
        between &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;, a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt; and a &lt;span class=
        &quot;tex2jax_process&quot;&gt;$z$&lt;/span&gt; between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$4$&lt;/span&gt;. Say you choose &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;, respectively. The first cut would
        alone cut the cuboid into two &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1\times 5\times 4$&lt;/span&gt; cuboids, the
        second into a single &lt;span class=&quot;tex2jax_process&quot;&gt;$3\times
        4\times 4$&lt;/span&gt; cuboid, while the third would alone cut the
        cuboid into a &lt;span class=&quot;tex2jax_process&quot;&gt;$3\times 5\times
        1$&lt;/span&gt; and a &lt;span class=&quot;tex2jax_process&quot;&gt;$3\times 5\times
        2$&lt;/span&gt; cuboid. Put together these cuts produces &lt;span class=
        &quot;tex2jax_process&quot;&gt;$4$&lt;/span&gt; new smaller cuboids, of sizes
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1\times 4\times
        1$&lt;/span&gt;,&lt;span class=&quot;tex2jax_process&quot;&gt;$1\times 4\times
        1$&lt;/span&gt;,&lt;span class=&quot;tex2jax_process&quot;&gt;$1\times 4\times
        2$&lt;/span&gt; and &lt;span class=&quot;tex2jax_process&quot;&gt;$1\times 4\times
        2$&lt;/span&gt;. Note that cutting a cuboid with an axis of size
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; would remove it
        altogether.&lt;/p&gt;
        &lt;p&gt;The players take turns making a move. The winner is the
        player that removes the last cuboid.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input is a line containing either
        &lt;tt class=&quot;ttfamily&quot;&gt;RUBEN&lt;/tt&gt; or &lt;tt class=
        &quot;ttfamily&quot;&gt;ALBERT&lt;/tt&gt;, the name of the player who starts that
        particular round.&lt;br&gt;
        Then follows a line containing &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, the number of cuboids that
        particular game starts with.&lt;br&gt;
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines follow, each
        describing a cuboid. A cuboid description consists of three
        numbers, &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$z$&lt;/span&gt;, the size of that particular
        cuboid.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the name of the player that wins the game (either
        &lt;tt class=&quot;ttfamily&quot;&gt;RUBEN&lt;/tt&gt; or &lt;tt class=
        &quot;ttfamily&quot;&gt;ALBERT&lt;/tt&gt;).&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le N \le
        100$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le x,y,z \le
        30$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;RUBEN
        1
        4 1 7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;RUBEN
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;ALBERT
        2
        4 4 4
        2 2 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;RUBEN
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;ALBERT
        3
        6 3 7
        18 1 9
        7 5 8
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;ALBERT
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Draft Time</title>
      <link>https://open.kattis.com/problems/drafttime</link>
      <guid>https://open.kattis.com/problems/drafttime</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=&quot;/problems/drafttime/file/statement/en/img-0001.jpg&quot;
        alt=&quot;/problems/drafttime/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;The NFL draft is soon upon us and it is only a few weeks
        until the best college players will have their dreams come true
        by joining a professional (American) football team. As always
        your friend Bubba just won’t stop talking about it.&lt;/p&gt;
        &lt;p&gt;The NFL draft is a process where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; NFL teams select college players,
        one at a time, in &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;
        rounds from a pool of &lt;span class=&quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt;
        total players. Bubba has checked with all his sources in the
        different teams and already knows how each team rates each of
        the college players. Knowing how the draft will end a few weeks
        early has left Bubba with some time to solve his favourite
        problem. Would it be possible be to make this draft a happy
        draft; a draft where all the teams and all the players are
        happy with the result?&lt;/p&gt;
        &lt;p&gt;Bubba thinks all teams and all players will be happy with
        the result if there exists no player &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; and team &lt;span class=
        &quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt; such that &lt;i class=
        &quot;itshape&quot;&gt;both&lt;/i&gt; of the following are true:&lt;/p&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; is undrafted or
        would prefer to go to team &lt;span class=
        &quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt; over the team he got drafted
        by&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt; can draft more
        players or would prefer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; over one of the players they
        have already drafted&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;Thankfully all the college players keep their SnapFace
        profiles up to date with a ranked list of their favourite NFL
        teams. Can you help Bubba create a happy draft?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of three integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; representing the number of NFL
        teams, the number of rounds in this years draft, and the number
        of players in the draft.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines.
        Each line begins with a word, the name of the NFL team,
        followed by &lt;span class=&quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; words, the
        name of every player in the draft, rated from best to worst
        according to this team.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; lines.
        Each line begins with a word, the name of the player, followed
        by &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; words, the name of
        every NFL team in the draft, rated from best to worst according
        to this player.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the result of a happy draft if one is possible and
        &lt;tt class=&quot;ttfamily&quot;&gt;Hello darkness my old friend!&lt;/tt&gt; if no
        happy draft can be made. A happy draft should be formatted on
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines. Each line
        begins with a word, the name of the NFL team, followed by
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; words, the names of
        the players drafted by this team. Any happy draft on this
        format will be accepted.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq
        50$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq M \leq
        100$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$N\cdot M \leq K \leq 10\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;All team names &lt;span class=&quot;tex2jax_process&quot;&gt;$T$&lt;/span&gt;
        and player names &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;
        are unique, and consists of between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; characters in the range
        &lt;tt class=&quot;ttfamily&quot;&gt;a–z&lt;/tt&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 2 6
        browns martellus tyrod tom john teddy danny
        rams danny tyrod martellus john teddy tom
        giants teddy danny tyrod john tom martellus
        teddy giants browns rams
        danny giants browns rams
        tyrod giants rams browns
        john giants rams browns
        tom browns giants rams
        martellus giants browns rams
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;browns martellus tom
        rams tyrod john
        giants teddy danny
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Gear Changing</title>
      <link>https://open.kattis.com/problems/gearchanging</link>
      <guid>https://open.kattis.com/problems/gearchanging</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Lucy is making her road bike ready for the season. All parts
        have been checked for wear and tear and washed clean and she is
        ready to put the beauty back together again. There is only one
        thing troubling her. During the winter she has been to several
        motivational talks by previous professional cyclists. They have
        all talked about the importance of correct cadence while
        cycling. The cadence is the frequency your feet are pedaling at
        when you are cycling. Lucy is now wondering if she should
        change her gears setup before she reassembles the bike and goes
        on her first ride for the year.&lt;/p&gt;
        &lt;p&gt;Bike gears typically consist of a set of different-sized
        gears on the crank (the thing connected to the pedals) and a
        set of different-sized gears on the back wheel. These are
        connected by the chain to drive the bike forward. Can you help
        her figure out if she can keep her current setup and still
        change to all gears without it affecting her cadence too much?
        Specifically she does not want her cadence to be increased by
        more than &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;% when
        changing to the next lighter gear. We assume that the bicycle
        will continue at the same speed immediately after the gear
        change.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of three integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; representing the number of gears
        on the crank, the numbers of gears on the back wheel, and the
        maximum cadence change in percentage Lucy will tolerate when
        changing gears.&lt;br&gt;
        Then follows a line with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$C_ i$&lt;/span&gt; each representing the number of
        teeth on each of the gears on the crank.&lt;br&gt;
        Then follows a line with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$D_ j$&lt;/span&gt; each representing the number of
        teeth on each of the gears on the back wheel.&lt;br&gt;&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single line with the text &lt;tt class=&quot;ttfamily&quot;&gt;Ride
        on!&lt;/tt&gt; if Lucy can change through all the gears from heaviest
        to lightest in her current setup and &lt;tt class=&quot;ttfamily&quot;&gt;Time
        to change gears!&lt;/tt&gt; if she cannot.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N, M \leq
        100$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq P \leq 1\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$3 \leq C, D \leq 100\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2 11 15
        50 34
        11 12 13 14 16 18 20 22 25 28 32
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;Ride on!
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 8 10
        30 39 48
        10 13 16 22 25 28 32 35
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;Time to change gears!
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Gruesome Cave</title>
      <link>https://open.kattis.com/problems/gruesomecave</link>
      <guid>https://open.kattis.com/problems/gruesomecave</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/gruesomecave/file/statement/en/img-0001.png&quot; alt=
        &quot;/problems/gruesomecave/file/statement/en/img-0001.png&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;em&gt;It is pitch black. You are likely to be eaten by a
        grue.&lt;/em&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;The archaeologist Joanina Iones has been hard at work
        deciphering the arcane glyphs in front of a secret cave
        entrance. The glyphs tell the story of the cave: It has existed
        long before the beginning of time, and with it, a single grue
        was brought to life. It has, of course, also a diamond in it,
        which is why Joanina is here.&lt;/p&gt;
        &lt;p&gt;Encountering a grue will always lead to a horrible death,
        but fortunately Joanina knows how grues work:&lt;/p&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;Every hour, a grue moves to a random neighboring tile
        with uniform probability, except if a human is in the cave.
        While a human is in the cave it stays in one place.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;A grue does not like diamonds nor cave entrances, so it
        will never move to a cave entrance or a diamond tile.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;The glyphs also describe the map of the cave, as well as
        where the diamond is located. If Joanina wants to retrieve the
        diamond, how likely is it she encounters the grue using the
        least risky path?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of two space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$L$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$W$&lt;/span&gt;, indicating the length
        and width of the map, respectively.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$L$&lt;/span&gt; lines
        each consisting of a string of length &lt;span class=
        &quot;tex2jax_process&quot;&gt;$W$&lt;/span&gt;. Here, ‘ ’ denotes an empty tile,
        ‘&lt;tt class=&quot;ttfamily&quot;&gt;#&lt;/tt&gt;’ denotes a wall, ‘&lt;tt class=
        &quot;ttfamily&quot;&gt;E&lt;/tt&gt;’ denotes the cave entrance and ‘&lt;tt class=
        &quot;ttfamily&quot;&gt;D&lt;/tt&gt;’ denotes the diamond’s location.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the probability that Joanina will encounter the grue,
        assuming she chooses the least risky path. Your answer must
        have an absolute or relative error of at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$3 \leq L, W \leq
        30$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$2 \leq S \leq 70$&lt;/span&gt;,
        where &lt;span class=&quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; is the
        number of ‘ ’ tiles.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The border of the map can only contain ‘&lt;tt class=
        &quot;ttfamily&quot;&gt;E&lt;/tt&gt;’ and ‘&lt;tt class=&quot;ttfamily&quot;&gt;#&lt;/tt&gt;’
        tiles.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The map will only contain the characters ‘ ’,
        ’&lt;tt class=&quot;ttfamily&quot;&gt;#&lt;/tt&gt;’, ’&lt;tt class=
        &quot;ttfamily&quot;&gt;E&lt;/tt&gt;’ and ’&lt;tt class=&quot;ttfamily&quot;&gt;D&lt;/tt&gt;’ and
        there will only be one ’&lt;tt class=&quot;ttfamily&quot;&gt;E&lt;/tt&gt;’
        character and one ’&lt;tt class=&quot;ttfamily&quot;&gt;D&lt;/tt&gt;’ character
        per map.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;There will always be a way from the entrance to the
        diamond.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;All ‘ ’ tiles form a connected graph.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 6
        ######
        ## ###
        E   D#
        ## ###
        ######
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0.75
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Number Anagrams</title>
      <link>https://open.kattis.com/problems/nanagrams</link>
      <guid>https://open.kattis.com/problems/nanagrams</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=&quot;/problems/nanagrams/file/statement/en/img-0001.jpg&quot;
        alt=&quot;/problems/nanagrams/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;Tom is really interested in numbers, so he decided to become
        an accountant. To his great pleasure, he gets to see lots of
        numbers every day in his new job. Even though it is exciting to
        see all these numbers, the actual work happens to be boring. In
        order to combat boredom, he has created a game to help him have
        fun with all the interesting numbers.&lt;/p&gt;
        &lt;p&gt;From all the numbers he sees during a day, he picks one.
        Then he adds a digit, and rearranges the digits so that they
        form another number he has seen during the day. For example,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$123$&lt;/span&gt; can be turned into
        &lt;span class=&quot;tex2jax_process&quot;&gt;$2\, 031$&lt;/span&gt; by adding a
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and rearranging the
        digits. He keeps doing this with the new number until he has
        created a number that cannot be transformed into one he has
        seen using this method.&lt;/p&gt;
        &lt;p&gt;Letś say that he has seen the numbers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$32$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$322$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$243$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1\, 234$&lt;/span&gt; during the day. If he starts
        with &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, he can produce
        &lt;span class=&quot;tex2jax_process&quot;&gt;$32$&lt;/span&gt; next. Then he can
        choose between &lt;span class=&quot;tex2jax_process&quot;&gt;$322$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$243$&lt;/span&gt;. If he chooses
        &lt;span class=&quot;tex2jax_process&quot;&gt;$322$&lt;/span&gt;, the game is over,
        since he cannot create new numbers from there. If he chooses
        &lt;span class=&quot;tex2jax_process&quot;&gt;$243$&lt;/span&gt; instead, he can have
        one more turn, creating &lt;span class=&quot;tex2jax_process&quot;&gt;$1\,
        234$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Tom likes long numbers, so he tries to make the numbers with
        the largest number of digits possible. In the example above, he
        would choose to make &lt;span class=&quot;tex2jax_process&quot;&gt;$234$&lt;/span&gt;
        as his second move, so that he would be able to make
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1\, 234$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Help Tom find out how many ways he can make numbers with the
        largest number of digits possible, for a given list of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; starting numbers. The
        results can be very large, so you should output them modulo
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1\, 000\, 000\, 007$&lt;/span&gt;.
        Note that Tom is only interested in the length of the number,
        so if several numbers are longest, count the ways to make all
        of them. Note that transforming &lt;span class=
        &quot;tex2jax_process&quot;&gt;$55$&lt;/span&gt; to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$555$&lt;/span&gt; only counts as one way of making
        &lt;span class=&quot;tex2jax_process&quot;&gt;$555$&lt;/span&gt;, not three. If Tom
        sees the same number twice in a day, it still only counts as
        one number.&lt;/p&gt;
        &lt;p&gt;Since Tom sees a lot of numbers every day, we will use a
        Pseudo Random Number Generator to generate the numbers. The
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; number is
        generated using the following formula: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$X_ i = (a \cdot X_{i-1} + b) \bmod
        c$&lt;/span&gt;. &lt;span class=&quot;tex2jax_process&quot;&gt;$X_1 = d$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of two space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;, indicating how many
        numbers to generate, and how many starting numbers you need to
        process.&lt;br&gt;
        The second line of the input consists of four space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt;, describing the pseudo random
        number generator.&lt;br&gt;
        The next &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; lines each
        contain a single integer &lt;span class=&quot;tex2jax_process&quot;&gt;$S_
        i$&lt;/span&gt;, describing a starting number that you should
        process.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;For each of the &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;
        starting numbers, output a line with a single integer,
        representing the number of ways he can make the longest
        possible numbers for that starting number.&lt;/p&gt;
        &lt;h2&gt;Example&lt;/h2&gt;
        &lt;p&gt;The numbers that would be generated in the example are
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1, 5, 17, 53, 61, 85, 57, 73,
        21, 65$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq 100\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq M \leq 1\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq a, b, d &amp;lt; c
        \leq 100\, 000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;All starting numbers &lt;span class=&quot;tex2jax_process&quot;&gt;$S_
        i$&lt;/span&gt; will be numbers that Tom has seen during the
        day.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;10 2
        3 2 100 1
        1
        5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Picture Day</title>
      <link>https://open.kattis.com/problems/pictureday</link>
      <guid>https://open.kattis.com/problems/pictureday</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;The school for applied astrology has decided to take
        pictures of all their students. With moon phases being what
        they are, combined with Saturn’s position relative to Venus,
        they are forced to focus on cost.&lt;/p&gt;
        &lt;p&gt;In order to minimise cost, they have asked three
        photographers for their price and process. Photographer
        &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; wants to take
        &lt;span class=&quot;tex2jax_process&quot;&gt;$G_ a$&lt;/span&gt; group photos
        costing &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; per photo.
        Photographer &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; wants to
        take &lt;span class=&quot;tex2jax_process&quot;&gt;$G_ b$&lt;/span&gt; group photos
        costing &lt;span class=&quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; per photo.
        Photographer &lt;span class=&quot;tex2jax_process&quot;&gt;$C$&lt;/span&gt; wants to
        take photos with one student in each photo, costing
        &lt;span class=&quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; per photo.&lt;/p&gt;
        &lt;p&gt;Each student will be in exactly one of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;’s groups and exactly one of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;’s groups.&lt;/p&gt;
        &lt;p&gt;The three photographers are pretty flexible, so they will
        allow the school to choose some pictures from each if they want
        to.&lt;/p&gt;
        &lt;p&gt;What is the lowest price they have to pay so that each
        student will be in at least one picture?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of a single integer
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, the number of
        students in the school.&lt;br&gt;
        The second line consists of two space-separated integers,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$G_ a$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G_ b$&lt;/span&gt;, representing the number of
        groups for photographers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;.&lt;br&gt;
        The third line consists of the three space-separated integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt;, representing the prices of the
        tree photographers.&lt;br&gt;
        The next &lt;span class=&quot;tex2jax_process&quot;&gt;$G_ a$&lt;/span&gt; lines
        represent photographer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;’s groups, and consist of an
        integer &lt;span class=&quot;tex2jax_process&quot;&gt;$G_{ai}$&lt;/span&gt;,
        representing the number of students in that group, followed by
        &lt;span class=&quot;tex2jax_process&quot;&gt;$G_{ai}$&lt;/span&gt; space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$S_ j$&lt;/span&gt;,
        representing the student numbers in that group.&lt;br&gt;
        The next &lt;span class=&quot;tex2jax_process&quot;&gt;$G_ b$&lt;/span&gt; lines
        represent photographer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;’s groups, and consist of an
        integer &lt;span class=&quot;tex2jax_process&quot;&gt;$G_{bi}$&lt;/span&gt;,
        representing the number of students in that group, followed by
        &lt;span class=&quot;tex2jax_process&quot;&gt;$G_{bi}$&lt;/span&gt; space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$S_ j$&lt;/span&gt;,
        representing the student numbers in that group.&lt;br&gt;&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;The output should be a single integer representing the cost
        of photographing all students at least once.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq 1\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq G_ a, G_ b \leq
        50$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq G_ a, G_ b \leq
        N$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq G_{ai}, G_{bi}
        \leq N$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq a, b, c \leq 1\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq S_ j \leq
        N$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        3 2
        3 4 5
        3 1 2 3
        1 4
        1 5
        4 2 3 5 4
        1 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Polygon Game</title>
      <link>https://open.kattis.com/problems/polygongame</link>
      <guid>https://open.kattis.com/problems/polygongame</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Jack and Jill are playing a game they call Polygon Game. In
        this game they start with a convex polygon and then take turns
        dividing the polygon into smaller parts. They divide the
        polygon by drawing a straight line from one point on the border
        of the original polygon to another point on the border of the
        original polygon. The goal of the game is then to guess which
        of the resulting polygons has the largest area.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;: The number of vertices in the
        original polygon, and the number of lines drawn by Jack and
        Jill.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines,
        each consisting of two integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$X_ i$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$Y_ i$&lt;/span&gt;, representing the coordinates
        of the &lt;span class=&quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; of
        the vertex in original polygon given in a counter-clockwise
        order.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; lines,
        each consisting four real numbers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$X_1, Y_1, X_2,$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$X_2$&lt;/span&gt;, representing the two endpoints
        of a line drawn by Jack and Jill.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;The output should be a single line consisting of the area of
        the largest polygon created. Your answer must have an absolute
        or relative error of at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$3 \leq N \leq
        25$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$2 \leq M \leq
        50$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; will be an even
        number.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq X_ i, Y_ i \leq
        1\, 000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The polygon’s vertices are distinct.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;All lines will start and end on the border of the
        original polygon with an absolute error of at most
        &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;, and all
        lines will divide the original polygon into two parts.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Real numbers in the input will have at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; digits after the decimal
        point.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 2
        0 0
        1 0
        1 1
        0 1
        0 0 1 1
        0.5 0 0.5 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0.375
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Secret Santa Cycles</title>
      <link>https://open.kattis.com/problems/secretsantacycles</link>
      <guid>https://open.kattis.com/problems/secretsantacycles</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Tina is organizing Secret Santa at work. Secret Santa is a
        game where everyone is assigned to give a gift to another
        person, in secret. On the last day before Christmas, everyone
        opens their present.&lt;/p&gt;
        &lt;p&gt;The opening ceremony is organized in the following way: Tina
        picks a random person who gets to open their present. Then the
        person who gave that present gets to open theirs, and so on,
        until they get to a person who already opened theirs. At this
        point, Tina has to pick another random person, and continue the
        process from there.&lt;/p&gt;
        &lt;p&gt;Tina doesn’t like picking a random person, so she very much
        prefers that everyone form one big cycle. You have been given
        the task to find out if this is the case, so she can mentally
        prepare for how many random people she has to pick.&lt;/p&gt;
        &lt;p&gt;To your great horror, you find out that a secret Grinch has
        messed with the process so that each person &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; has to give a present to a random
        person &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;, instead of
        each person &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; receiving
        a present from a random person &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;. Specifically this means that some
        people might get no gifts, and some people might get multiple
        gifts.&lt;/p&gt;
        &lt;p&gt;This mistake obviously needs to be fixed. What is the
        smallest number of people that have to be assigned a new person
        to give a gift, so that everyone will get a gift, and Tina only
        has to pick one random person in the opening ceremony?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of a single integer
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, the number of people
        involved.&lt;br&gt;
        The following &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt; lines
        each consists of a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G_ i$&lt;/span&gt;, the id of the person they
        should give a gift to.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output the number of people who have to be assigned a new
        person as their secret Santa target.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N \leq 10\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq G_ i \leq
        N$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        2
        3
        4
        5
        1
        2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>When Planetoids Align</title>
      <link>https://open.kattis.com/problems/whenplanetoidsalign</link>
      <guid>https://open.kattis.com/problems/whenplanetoidsalign</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/whenplanetoidsalign/file/statement/en/img-0001.jpg&quot;
        alt=
        &quot;/problems/whenplanetoidsalign/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        Image by &lt;a href=
        &quot;https://www.flickr.com/photos/147764143@N07/32043362684&quot;&gt;kristian
        fagerström&lt;/a&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;After the Twilight Wars, both Venus, Earth and Mars broke
        into small pieces we now call planetoids. Fortunately humanity
        survived, and has managed to repopulate the remains of what was
        once was the Planetarian Trinity. To keep the planetoids
        united, we formed the InterPlantoidary Programming Competition
        (IPPC).&lt;/p&gt;
        &lt;p&gt;To compete in the IPPC, you need to qualify through one of
        the regional finals. A region is defined as all planetoids
        whose distance from Sol is within a specified interval
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(A_ i, B_ i)$&lt;/span&gt;. A
        planetoid can be part of multiple regions.&lt;/p&gt;
        &lt;p&gt;Unfortunately, the regional finals seldom happen, as they
        require low InterPlaNet delays between the planetoids. In fact,
        they only happen when all planetoids in the region are aligned
        along the &lt;em&gt;Mean Axis&lt;/em&gt; (empty regions are always aligned
        along the &lt;em&gt;Mean Axis&lt;/em&gt;).&lt;/p&gt;
        &lt;p&gt;Given that all planetoids are aligned along the &lt;em&gt;Mean
        Axis&lt;/em&gt; today, when is the next Old Earth day a region could
        hold a regional final?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of two space-separated
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt;, representing the
        number of planetoids and regions.&lt;br&gt;
        The next &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt; lines each
        consist of a number &lt;span class=&quot;tex2jax_process&quot;&gt;$r_ i$&lt;/span&gt;
        and an integer &lt;span class=&quot;tex2jax_process&quot;&gt;$o_ i$&lt;/span&gt;,
        representing the &lt;span class=&quot;tex2jax_process&quot;&gt;$i^\textrm
        {th}$&lt;/span&gt; planetoid’s orbital radius and orbital period in
        Old Earth days. The orbital period represents the number of old
        earth days between each time the planetoid is aligned along the
        &lt;em&gt;Mean Axis&lt;/em&gt;.&lt;br&gt;
        The next &lt;span class=&quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt; lines consist
        of two numbers &lt;span class=&quot;tex2jax_process&quot;&gt;$A_ i$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$B_ i$&lt;/span&gt;, describing the
        interval that defines the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; region.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;For each region, output a line with the number of Old Earth
        days until the next time a regional final can be arranged in
        this region.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq P, R \leq 100\,
        000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq o_ i \leq 1\,
        000\, 000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0.5 &amp;lt; r_ i &amp;lt;
        3.0$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0.5 \leq A_ i &amp;lt; B_ i
        \leq 3.0$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;No &lt;span class=&quot;tex2jax_process&quot;&gt;$r_ i$&lt;/span&gt; will be
        closer to any &lt;span class=&quot;tex2jax_process&quot;&gt;$A_ j$&lt;/span&gt;
        or &lt;span class=&quot;tex2jax_process&quot;&gt;$B_ j$&lt;/span&gt; than
        &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-8}$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;There are less than &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{18}$&lt;/span&gt; Old Earth days until the
        next time all planetoids are aligned along the &lt;em&gt;Mean
        Axis&lt;/em&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Real numbers in the input will have at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; digits after the decimal
        point.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;7 4
        1.0 365
        1.02 400
        1.20 301
        0.8 250
        0.81 224
        1.52 686
        1.40 1843
        0.9 1.3
        1.211119 1.6
        0.79 1.1
        0.7 0.9
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;8789200
        1264298
        2044000
        28000
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Witchwood</title>
      <link>https://open.kattis.com/problems/witchwood</link>
      <guid>https://open.kattis.com/problems/witchwood</guid>
      <pubDate>Sat, 14 Apr 2018 11:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:20.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=&quot;/problems/witchwood/file/statement/en/img-0001.jpg&quot;
        alt=&quot;/problems/witchwood/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        Photo by &lt;a href=
        &quot;https://www.flickr.com/photos/ikewinski/8586630629&quot;&gt;Mike
        Lewinski&lt;/a&gt;
        &lt;/div&gt;
        &lt;/div&gt;
        &lt;p&gt;Maaba is playing the game &lt;em&gt;Lumberjack&lt;/em&gt;, where the
        goal is to build log huts. Her current customer wants a hut
        made completely out of &lt;em&gt;witchwood&lt;/em&gt;, which protects the
        hut from curses, hexes and magic spells – or at least that’s
        what the customer claims.&lt;/p&gt;
        &lt;p&gt;However, witchwood is not easy to handle: Some witch trees
        are highly volatile, and logs made from those trees will
        spontaneously combust when placed on the hut location. This
        will destroy both the original log and all logs nearby.
        Unfortunately, it is not possible to see the difference before
        the log is placed on the hut location, but it is known that a
        log from location &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; will
        have probability &lt;span class=&quot;tex2jax_process&quot;&gt;$P_ i$&lt;/span&gt; of
        combusting.&lt;/p&gt;
        &lt;p&gt;To avoid spending too much time, Maaba has devised a simple
        way to build the hut:&lt;/p&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;She uses &lt;span class=&quot;tex2jax_process&quot;&gt;$T_ i$&lt;/span&gt;
        seconds to retrieve and place a single witchwood log from
        location &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;If the hut logs combust, she waits &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt; seconds to wait for the fire
        to stop, then collect the ashes. Afterwards, she starts
        over from scratch.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;If nothing happens, she continues with the next log.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;p&gt;As all locations have an infinite supply of witch trees,
        Maaba knows she will be done eventually. However, she wonders
        how long it would take her on average, if she retrieves logs
        from the right location at the right time. Could you help
        her?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of the input consists of three integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$N$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$K$&lt;/span&gt;: The number of logs required to
        build the hut, the number of locations with witchwood, and the
        time it takes for witchwood to stop burning.&lt;br&gt;
        Then follows &lt;span class=&quot;tex2jax_process&quot;&gt;$M$&lt;/span&gt; lines,
        each consisting of an integer &lt;span class=&quot;tex2jax_process&quot;&gt;$T_
        i$&lt;/span&gt;, and a real number &lt;span class=&quot;tex2jax_process&quot;&gt;$P_
        i$&lt;/span&gt;, representing the time it takes to retrieve a log
        from &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; and the
        probability that the log will spontaneously combust when
        placed.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;The output should be a single real number representing the
        expected time in seconds Maaba will use to build a log hut out
        of only witchwood. Your answer must have an absolute or
        relative error of at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Limits&lt;/h2&gt;
        &lt;ul class=&quot;itemize&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq N, M \leq
        1000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq K \leq
        1000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \leq T_ i \leq
        1000$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$0 \leq P_ i &amp;lt;
        1$&lt;/span&gt;&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;The result will always be less than &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^{30}$&lt;/span&gt;.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Real numbers in the input will have at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; digits after the decimal
        point.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ul&gt;
        &lt;h2&gt;Sample Explanation&lt;/h2&gt;
        &lt;p&gt;In the provided example, the optimal choice is to retrieve a
        log from &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; when she has
        placed &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; logs, a log
        from &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; when she has
        placed &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; log, and a log
        from &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; when she has
        placed &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; logs.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 3 1
        8 0.5
        20 0.3
        1 0.8
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;79.0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Bus Planning</title>
      <link>https://open.kattis.com/problems/busplanning</link>
      <guid>https://open.kattis.com/problems/busplanning</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:40.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/busplanning/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/busplanning/file/statement/en/img-0001.jpg&quot; class=
        &quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;a href=
        &quot;https://commons.wikimedia.org/wiki/File:Chevrolet_Van_School_Bus.jpg&quot;&gt;
        Picture&lt;/a&gt; by AutoPhoto via Wikimedia Commons, cc by
        &lt;/div&gt;
        &lt;/div&gt;An elementary school class is going on a road trip by bus
        to a computer factory. However, the driver is really tired of
        having to drive fighting kids all day, so she suggested that
        the class should split up and go to the factory in groups. She
        has already observed which kids dislike each other and are
        likely to fight, so she wants to make sure they do not end up
        in the same group. Of course, driving everyone one-by-one is a
        waste of time and money, so the driver wants to minimize the
        number of groups she has to drive. In addition, the bus is
        pretty small, and may only fit up to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; kids at a time.
        &lt;p&gt;You are to write a program which helps her with the task of
        making these groups. Given the number of kids and their
        enemies, find the minimum number of groups required, as well as
        a division of the class into this minimum number of groups&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line contains three integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n \le 17$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$0 \le k
        \le \frac{n(n-1)}{2}$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le c \le n$&lt;/span&gt;) – the number of kids,
        pairs of enemies, and the capacity of the bus, respectively.
        Then follow &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; lines with
        the kids’ names. Each name consists solely of the characters
        &lt;tt class=&quot;ttfamily&quot;&gt;A-Z&lt;/tt&gt; and &lt;tt class=
        &quot;ttfamily&quot;&gt;a-z&lt;/tt&gt;, is non-empty, and at most &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10$&lt;/span&gt; characters long. Then follow
        &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; lines, each containing
        a pair of space-separated names indicating a pair of kids that
        dislike each other. No pair of names appears twice, and no kid
        is their own enemy.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;On the first line, output the minimum number of groups,
        followed by one line per group containing the names of the
        children in that group (separated by spaces).&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2 0 1
        Alice
        Bob
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        Alice
        Bob
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 2 3
        Alice
        Charlie
        Bob
        Alice Charlie
        Bob Charlie
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        Alice Bob
        Charlie
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Cars</title>
      <link>https://open.kattis.com/problems/cars</link>
      <guid>https://open.kattis.com/problems/cars</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=&quot;/problems/cars/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/cars/file/statement/en/img-0001.jpg&quot; class=
        &quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;a href=
        &quot;https://commons.wikimedia.org/wiki/File:Self_driving_vehicle.jpg&quot;&gt;
        Picture&lt;/a&gt; by Sammmerbatter via Wikimedia Commons, cc
        by-sa
        &lt;/div&gt;
        &lt;/div&gt;You work as an engineer at the leading self-driving car
        company Wayber. Wayber just got approval from the government of
        Sweden for their cars to drive in the streets of Stockholm.
        Unfortunately, all your tests so far have been with one car at
        a time on a closed dirt track. You are not really prepared for
        what will happen when two of the cars encounter each other in
        the city, and want to write some code to handle this.
        &lt;p&gt;The cars are already good at staying inside the lines and
        turning. However, they are not very good at detecting other
        moving vehicles. Fortunately, the government of Sweden is so
        enthusiastic about self-driving cars that they have banned all
        other forms of transportation in Stockholm, including
        human-driven cars, biking, and walking. If you can just detect
        whether two cars will collide you will be able to build a safe
        system.&lt;/p&gt;
        &lt;p&gt;You know that all cities consist of only north-south and
        east-west oriented streets in a perfect grid, and all cars are
        perfect rectangular prisms. When detecting collisions you only
        need to worry about cars traveling at a constant speed without
        turning.&lt;/p&gt;
        &lt;div id=&quot;a0000000004&quot; class=&quot;figure&quot;&gt;
        &lt;center&gt;
        &lt;img src=&quot;/problems/cars/file/statement/en/img-0002.png&quot;
        alt=&quot;\includegraphics[width=0.35\textwidth ]{sample1}&quot;
        style=&quot;width:35.00%&quot;&gt;
        &lt;div class=&quot;caption&quot;&gt;
        &lt;b&gt;Figure 1&lt;/b&gt;: Illustration of Sample Input 1.
        &lt;/div&gt;
        &lt;/center&gt;
        &lt;/div&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le t \le 10^4$&lt;/span&gt;, the duration in
        seconds of the trajectory of the two cars. Then follow the
        description of the trajectory of two cars.&lt;/p&gt;
        &lt;p&gt;A trajectory consists of a line containing a character
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt; and five integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$s$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$w$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$l$&lt;/span&gt;. The starting position of the car
        is &lt;span class=&quot;tex2jax_process&quot;&gt;$(x,y)$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \le x, y \le 10^4$&lt;/span&gt;) and its
        direction is &lt;span class=&quot;tex2jax_process&quot;&gt;$d$&lt;/span&gt; which is
        either &lt;tt class=&quot;ttfamily&quot;&gt;N&lt;/tt&gt; (positive &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; direction), &lt;tt class=
        &quot;ttfamily&quot;&gt;S&lt;/tt&gt; (negative &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; direction), &lt;tt class=
        &quot;ttfamily&quot;&gt;W&lt;/tt&gt; (negative &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt; direction) or &lt;tt class=
        &quot;ttfamily&quot;&gt;E&lt;/tt&gt; (positive &lt;span class=
        &quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt; direction). The car is travelling
        at a speed of &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le s \le
        10^4$&lt;/span&gt; units per second, is &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le w \le 10^4$&lt;/span&gt; units wide, and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le l \le 10^4$&lt;/span&gt; units
        long.&lt;/p&gt;
        &lt;p&gt;Cars start out centred on their starting coordinates and do
        not initially overlap in a nonzero area.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;For each line of input, output a line “&lt;tt class=
        &quot;ttfamily&quot;&gt;crash&lt;/tt&gt;” if the two cars will crash or
        “&lt;tt class=&quot;ttfamily&quot;&gt;safe&lt;/tt&gt;” if they will not crash. If two
        cars overlap in an area of size zero (only on an edge or
        corner) they do not crash.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        E 0 0 2 1 2
        S 3 2 1 1 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;crash
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        E 0 0 1 1 1
        N 0 2 1 1 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;safe
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        N 0 0 7 3 1
        S 3 20 12 4 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;crash

        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 4&lt;/th&gt;
        &lt;th&gt;Sample Output 4&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        N 0 0 7 3 1
        S 3 20 12 4 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;safe
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Color Codes</title>
      <link>https://open.kattis.com/problems/colorcodes</link>
      <guid>https://open.kattis.com/problems/colorcodes</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:40.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/colorcodes/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/colorcodes/file/statement/en/img-0001.jpg&quot; class=
        &quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;a href=
        &quot;https://www.flickr.com/photos/designmilk/23965668670&quot;&gt;Picture&lt;/a&gt;
        by designmilk on Flickr, cc by-sa
        &lt;/div&gt;
        &lt;/div&gt;&lt;em&gt;Gray codes&lt;/em&gt; are a classic topic in information
        theory with a number of practical applications, none of which
        we are concerned with in this problem. An &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit Gray code is an ordering
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(x_1, x_2, \ldots , x_{2^
        n})$&lt;/span&gt; of all &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit
        binary strings, with the property that any consecutive pair of
        strings differ in exactly &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; bit. More formally, for every
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le i &amp;lt; 2^ n$&lt;/span&gt;, it
        holds that &lt;span class=&quot;tex2jax_process&quot;&gt;$d(x_{i}, x_{i+1}) =
        1$&lt;/span&gt;, where &lt;span class=&quot;tex2jax_process&quot;&gt;$d(\cdot , \cdot
        )$&lt;/span&gt; denotes the Hamming distance between two binary
        strings. For instance, for &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n=3$&lt;/span&gt;, the sequence &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(000, 001, 011, 010, 110, 111, 101,
        100)$&lt;/span&gt; is a Gray code.
        &lt;p&gt;While Gray codes are great, they are also a bit, well...
        gray&lt;a href=&quot;#a0000000004&quot; class=&quot;footnote&quot;&gt;&lt;sup class=
        &quot;footnotemark&quot;&gt;1&lt;/sup&gt;&lt;/a&gt;. In this problem, we look at a much
        more colorful variant.&lt;/p&gt;
        &lt;p&gt;For an integer &lt;span class=&quot;tex2jax_process&quot;&gt;$n \ge
        1$&lt;/span&gt; and set of integers &lt;span class=&quot;tex2jax_process&quot;&gt;$P
        \subseteq \{ 1, \ldots , n\} $&lt;/span&gt;, we say that an ordering
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(x_1, \ldots , x_{2^ n})$&lt;/span&gt;
        of all &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit binary
        strings is an &lt;em&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit
        color code with palette &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;&lt;/em&gt;, if for all &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le i &amp;lt; 2^ n$&lt;/span&gt;, it holds that
        &lt;span class=&quot;tex2jax_process&quot;&gt;$d(x_ i, x_{i+1}) \in P$&lt;/span&gt;,
        i.e., the number of bits by which any consecutive pair of
        strings differ is in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Note that for some palettes, color codes do not exist. For
        instance, if &lt;span class=&quot;tex2jax_process&quot;&gt;$n = 6$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$P = \{ 6\} $&lt;/span&gt;, the second
        string must be the binary negation of the first one, but then
        the third string must be the negation of the second one, i.e.,
        equal to the first string.&lt;/p&gt;
        &lt;p&gt;Given &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;, can you construct an
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit color code with
        palette &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input consists of two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le n \le 16$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$p$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le p \le n$&lt;/span&gt;). Then follow a line with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$p$&lt;/span&gt; distinct integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$s_1, \ldots , s_ p$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \leq s_ i \leq n$&lt;/span&gt; for each
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;) – the elements of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;If there is an &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;-bit
        color code with palette &lt;span class=
        &quot;tex2jax_process&quot;&gt;$P$&lt;/span&gt;, output &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2^ n$&lt;/span&gt; lines, containing the elements
        of such a code, in order. If there are many different codes,
        any one will be accepted. If no such code exists, output
        “&lt;tt class=&quot;ttfamily&quot;&gt;impossible&lt;/tt&gt;”.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6 1
        6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;impossible
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 1
        1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;000
        001
        011
        010
        110
        111
        101
        100
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 2
        3 2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0110
        1101
        1011
        0001
        0111
        1100
        1001
        0000
        0101
        0011
        1111
        1010
        0100
        1000
        0010
        1110
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;
        &lt;div class=&quot;footnotes&quot;&gt;
        &lt;p&gt;&lt;b&gt;Footnotes&lt;/b&gt;&lt;/p&gt;
        &lt;ol&gt;
        &lt;li id=&quot;a0000000004&quot;&gt;With apologies to Frank Gray.&lt;/li&gt;
        &lt;/ol&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>#exclude&lt;scoring&gt;</title>
      <link>https://open.kattis.com/problems/excludescoring</link>
      <guid>https://open.kattis.com/problems/excludescoring</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You are participating in a programming contest cup. The cup
        consists of a series of programming contests, followed by a
        final at the end of the season for the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$15$&lt;/span&gt; top ranked contestants in the
        cup. With only one contest left to go before the final, you are
        starting to wonder if your performance in the earlier contests
        has been good enough to already secure you a spot in the
        finals. If so, you could succumb to your laziness and skip the
        last contest.&lt;/p&gt;
        &lt;p&gt;The ranking of the cup works as follows. In each contest, a
        contestant earns some number of points between &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$101$&lt;/span&gt; (the details of this are
        described below). Their &lt;em&gt;aggregate score&lt;/em&gt; is then
        defined to be the &lt;em&gt;sum of the four highest scores&lt;/em&gt;
        achieved. For instance if a contestant got &lt;span class=
        &quot;tex2jax_process&quot;&gt;$45$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$15$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$32$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$30$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt; points over &lt;span class=
        &quot;tex2jax_process&quot;&gt;$6$&lt;/span&gt; contests, their aggregate score is
        &lt;span class=&quot;tex2jax_process&quot;&gt;$45+32+30+20=127$&lt;/span&gt;. The
        &lt;em&gt;rank&lt;/em&gt; of a contestant X &lt;em&gt;in the cup&lt;/em&gt; is defined
        to be &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; plus the number
        of contestants that have a strictly larger aggregate score than
        X.&lt;/p&gt;
        &lt;p&gt;The score a contestant earns from a contest is based on the
        rank they achieve &lt;em&gt;in that contest&lt;/em&gt;, according to the
        following table.&lt;/p&gt;
        &lt;center&gt;
        &lt;table cellspacing=&quot;0&quot; class=&quot;tabular&quot;&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Rank&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Points&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Rank&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Points&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Rank&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;b class=&quot;bfseries&quot;&gt;Points&lt;/b&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$100$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$11$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$24$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$21$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$10$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$75$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$12$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$22$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$22$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$9$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$60$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$13$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$23$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$8$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$4$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$50$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$14$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$18$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$24$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$7$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$45$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$15$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$16$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$25$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$6$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$6$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$40$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$16$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$15$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$26$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$7$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$36$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$17$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$14$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$27$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$4$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$8$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$32$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$18$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$13$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$28$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$9$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$29$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$19$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$12$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$29$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; text-align:center; border-top-color:black; border-top-width:1px; border-right:1px solid black&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-left:1px solid black; border-right:1px solid black; border-top-color:black; border-top-width:1px; border-bottom-color:black; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$10$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$26$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$11$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$30$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;td style=
        &quot;border-top-style:solid; border-bottom-style:solid; border-bottom-width:1px; border-bottom-color:black; border-right:1px solid black; border-top-color:black; border-top-width:1px; text-align:center&quot;&gt;
        &lt;p&gt;&lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;&lt;/p&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/center&gt;
        &lt;p&gt;If a contestant gets a worse rank than &lt;span class=
        &quot;tex2jax_process&quot;&gt;$30$&lt;/span&gt;, they get &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; points. If two or more contestants
        get the same rank in the contest, they are instead assigned the
        average points of all the corresponding ranks. This average is
        always rounded up to the closest integer. For example, if three
        contestants are tied for second place they all receive
        &lt;span class=&quot;tex2jax_process&quot;&gt;$\lceil \frac{75 + 60 + 50}{3}
        \rceil = 62$&lt;/span&gt; points, and the next contestant will have
        rank &lt;span class=&quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt; and receives
        &lt;span class=&quot;tex2jax_process&quot;&gt;$45$&lt;/span&gt; points (or less, if
        there is a tie also for &lt;span class=
        &quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt;’th place). This applies also at
        rank &lt;span class=&quot;tex2jax_process&quot;&gt;$30$&lt;/span&gt;, e.g., if
        &lt;span class=&quot;tex2jax_process&quot;&gt;$4\, 711$&lt;/span&gt; contestants are
        tied for &lt;span class=&quot;tex2jax_process&quot;&gt;$30$&lt;/span&gt;’th place,
        they all receive &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;
        point.&lt;/p&gt;
        &lt;p&gt;Contestants may participate in every contest either on-site
        or online. If they compete on-site, they get &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; extra point, no matter their
        original number of points. If a contestant does not participate
        in a contest, they get &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;
        points.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains two integers &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$2
        \le n \le 10$&lt;/span&gt;, &lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le m
        \le 10^5$&lt;/span&gt;), where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of contests in the
        cup (excluding the final), and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; is the number of people who
        participated in any of the first &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt; contests.&lt;/p&gt;
        &lt;p&gt;Then follow &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; lines,
        each describing a contestant. Each such line consists of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt; integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0 \le s_1, \ldots , s_{n-1} \le
        101$&lt;/span&gt;, where &lt;span class=&quot;tex2jax_process&quot;&gt;$s_ i$&lt;/span&gt;
        is the score that this contestant received in the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th contest.&lt;/p&gt;
        &lt;p&gt;The first contestant listed is you. The point values in the
        input might not correspond to actual points from a contest.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt;, the worst possible rank you might
        end up in after the last contest, assuming you do not
        participate in it.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 2
        50 50 75
        25 25 25
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 2
        50 50 50 50
        25 25 25 25
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1



        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2 4
        90
        1
        3
        2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;3

        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Mars Window</title>
      <link>https://open.kattis.com/problems/marswindow</link>
      <guid>https://open.kattis.com/problems/marswindow</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:30.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/marswindow/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/marswindow/file/statement/en/img-0001.jpg&quot; class=
        &quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;a href=
        &quot;http://www.esa.int/spaceinimages/Images/2007/02/True-colour_image_of_Mars_seen_by_OSIRIS&quot;&gt;
        Picture&lt;/a&gt; by the European Space Agency, cc by-sa
        &lt;/div&gt;
        &lt;/div&gt;You are an eccentric billionaire with an affinity for
        sending stuff to Mars. In an ideal world you would send stuff
        to Mars all the time, but your engineers tell you that it is
        most efficient to do it when Earth and Mars are somewhat close
        to each other.
        &lt;p&gt;Your engineers have calculated that optimal launch windows
        occur once every 26 months, and that one of them occurs in
        April 2018. They also tell you that they will not have any Big
        Finished Rockets by then, so you will have to wait for a later
        launch window.&lt;/p&gt;
        &lt;p&gt;Since your rocket scientists apparently can not be bothered
        to tell you about the optimal launch windows before it is too
        late, you have to keep track of that yourself. Write a program
        that determines if there is an optimal launch window in any
        given year.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The only line of input contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$2018 \le y \le 10000$&lt;/span&gt;), the year you
        are interested in.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output “&lt;tt class=&quot;ttfamily&quot;&gt;yes&lt;/tt&gt;” if there is an
        optimal launch window in the year &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt;, otherwise output “&lt;tt class=
        &quot;ttfamily&quot;&gt;no&lt;/tt&gt;”.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2018
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;yes
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2019
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;no
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2020
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;yes
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 4&lt;/th&gt;
        &lt;th&gt;Sample Output 4&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2028
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;no
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Mathemagicians</title>
      <link>https://open.kattis.com/problems/mathemagicians</link>
      <guid>https://open.kattis.com/problems/mathemagicians</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;There are &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;
        mathemagicians standing in a circle. Each mathemagician wears
        either a blue hat or a red hat. A mathemagician can cast a
        color change charm which changes the color of their hat to the
        same color as the hat of the mathemagician directly to the left
        or to the right of them (the caster of the spell may choose
        which one of them). Note that mathemagicians are polite people
        and do not like interrupting each other, so only one
        mathemagician at a time may perform mathemagic.&lt;/p&gt;
        &lt;p&gt;The mathemagicians are not happy with their current hat
        configuration, so they would like to use the color change charm
        repeatedly to enter another hat configuration. Time isn’t an
        issue because they can conjure cookies to eat.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line contains an integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$3
        \leq n \leq 10^5$&lt;/span&gt;), the number of mathemagicians. The
        next contains a string of length &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;. If the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th mathemagician wears a blue hat
        in the beginning, the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th character of the string is
        ‘&lt;tt class=&quot;ttfamily&quot;&gt;B&lt;/tt&gt;’, otherwise the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th character is ‘&lt;tt class=
        &quot;ttfamily&quot;&gt;R&lt;/tt&gt;’. Finally, the third line contains a string
        of length &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;. If the
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th mathemagician would
        like to wear a blue hat in the end, the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th character of the string is
        ‘&lt;tt class=&quot;ttfamily&quot;&gt;B&lt;/tt&gt;’, otherwise the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;th character is ‘&lt;tt class=
        &quot;ttfamily&quot;&gt;R&lt;/tt&gt;’.&lt;/p&gt;
        &lt;p&gt;It is guaranteed that not every mathemagician is happy with
        their hat color in the beginning.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output “&lt;tt class=&quot;ttfamily&quot;&gt;yes&lt;/tt&gt;” if it is possible for
        the mathemagicians to achieve the desired hat configuration
        after a finite number of color change charms, otherwise output
        “&lt;tt class=&quot;ttfamily&quot;&gt;no&lt;/tt&gt;”.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        BRBBR
        RBBRR
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;yes
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        RBRBRB
        BRBRBR
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;no
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Pairing Socks</title>
      <link>https://open.kattis.com/problems/pairingsocks</link>
      <guid>https://open.kattis.com/problems/pairingsocks</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;div style=&quot;width:25.00%&quot; class=&quot;illustration&quot;&gt;
        &lt;img src=
        &quot;/problems/pairingsocks/file/statement/en/img-0001.jpg&quot; alt=
        &quot;/problems/pairingsocks/file/statement/en/img-0001.jpg&quot;
        class=&quot;illustration&quot;&gt;
        &lt;div class=&quot;description&quot;&gt;
        &lt;a href=
        &quot;https://commons.wikimedia.org/wiki/Category:Socks#/media/File:H%C3%B8nsestrik_i_den_gamle_by_4.jpg&quot;&gt;
        Picture&lt;/a&gt; by Villy Fink Isaksen, cc by-sa
        &lt;/div&gt;
        &lt;/div&gt;Simone’s mother often complains about how Simone never
        helps with chores at home. In return, Simone often points out
        that many of the chores her mother assigns her are NP-complete
        to perform optimally (like cleaning the house, seating her
        little brothers around the dinner table in a conflict-free way,
        splitting the brothers’ Halloween loot in a fair manner and so
        on).
        &lt;p&gt;Being a computer scientist, her mother finds this a fair
        objection. Looking over her list of potential chores, she
        picked one she thinks should be easy to solve – pairing a
        number of different kinds of socks.&lt;/p&gt;
        &lt;p&gt;In the beginning, there are &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2n$&lt;/span&gt; socks stacked in a pile. To pair
        the socks, Simone can repeatedly make one of three moves:&lt;/p&gt;
        &lt;ol class=&quot;enumerate&quot;&gt;
        &lt;li&gt;
        &lt;p&gt;Move the sock from the top of the original pile to the
        top of an auxiliary pile (which is originally empty).&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Move the sock from the top of the auxiliary pile to the
        top of the original pile.&lt;/p&gt;
        &lt;/li&gt;
        &lt;li&gt;
        &lt;p&gt;Pair the top socks from each pile together, if they are
        of the same type.&lt;/p&gt;
        &lt;/li&gt;
        &lt;/ol&gt;
        &lt;p&gt;Simone only has one auxiliary pile, for a total of two
        piles. There may be more than two socks of each type. In this
        case, Simone can pair them up however she wants.&lt;/p&gt;
        &lt;p&gt;Your task is to help Simone to determine the least number of
        moves she needs to pair the socks, if it is possible at
        all.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains the integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n \le 10^5$&lt;/span&gt;) as described above. The next line
        contains &lt;span class=&quot;tex2jax_process&quot;&gt;$2n$&lt;/span&gt; integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a_1, \ldots , a_{2n}$&lt;/span&gt;
        (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le a_ i \le 10^9$&lt;/span&gt; for
        each &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;), where
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a_ i$&lt;/span&gt; denotes the type of
        sock number &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;.
        Initially, sock &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; is at
        the top of the pile and sock &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2n$&lt;/span&gt; is at the bottom.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;If Simone can pair all the socks, output the least number of
        moves she needs to do this. If it is impossible to do so,
        output “&lt;tt class=&quot;ttfamily&quot;&gt;impossible&lt;/tt&gt;” (without the
        quotes).&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        1 2 2 1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        3 7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;impossible
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        5 5 5 5 5 5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;6
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Tree Hugging</title>
      <link>https://open.kattis.com/problems/treehugging</link>
      <guid>https://open.kattis.com/problems/treehugging</guid>
      <pubDate>Sun, 08 Apr 2018 10:00:00 +0200</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Once, two trees forgot their place and started to grow into
        each other. One of the trees grew from the left, and the other
        from the right. On &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;
        points, they collided.&lt;/p&gt;
        &lt;p&gt;Numbering the points &lt;span class=&quot;tex2jax_process&quot;&gt;$1, 2,
        \dots , n$&lt;/span&gt; from left to right, the left tree ended up
        connecting all of them in a single subtree rooted in node
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, such that every
        node’s children had larger numbers than the node itself. We can
        describe this subtree with a list of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt; edges.&lt;/p&gt;
        &lt;p&gt;Similarly, the right tree also connected all nodes in a
        single subtree rooted in node &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, with every node’s children having
        smaller numbers than the node itself. This yields an additional
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt; edges.&lt;/p&gt;
        &lt;p&gt;Now, given the full list of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2(n-1)$&lt;/span&gt; edges, it is not necessarily
        easy to tell which edge belongs to which tree. Can you figure
        out a possible assignment, or determine that it is impossible
        for this collection to have been the union of two trees?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;The first line of input contains the integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$2
        \le n \le 10^5$&lt;/span&gt;). The next &lt;span class=
        &quot;tex2jax_process&quot;&gt;$2(n-1)$&lt;/span&gt; lines each contain two
        integers &lt;span class=&quot;tex2jax_process&quot;&gt;$u, v$&lt;/span&gt;
        (&lt;span class=&quot;tex2jax_process&quot;&gt;$1 \le u &amp;lt; v \le n$&lt;/span&gt;)
        indicating an edge joining the two nodes &lt;span class=
        &quot;tex2jax_process&quot;&gt;$u$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$v$&lt;/span&gt;. A pair &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(u, v)$&lt;/span&gt; may be connected by more than
        one edge.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;If it is possible for the edges to be the union of two trees
        that grow left-to-right and right-to-left, output a string of
        length &lt;span class=&quot;tex2jax_process&quot;&gt;$2(n-1)$&lt;/span&gt;, where the
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;’s character is
        &lt;tt class=&quot;ttfamily&quot;&gt;L&lt;/tt&gt; if the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt;’th edge should come from the left
        tree, or &lt;tt class=&quot;ttfamily&quot;&gt;R&lt;/tt&gt; if it should come from the
        right tree. Otherwise, output the word “&lt;tt class=
        &quot;ttfamily&quot;&gt;impossible&lt;/tt&gt;” on a single line. If there are
        multiple solutions, you may output any one of them.&lt;/p&gt;
        &lt;h2&gt;Explanation of Sample Inputs&lt;/h2&gt;
        &lt;p&gt;In the first example, there are two solutions: &lt;tt class=
        &quot;ttfamily&quot;&gt;LLRRRRLL&lt;/tt&gt; and &lt;tt class=
        &quot;ttfamily&quot;&gt;LLRLRRLR&lt;/tt&gt;.&lt;/p&gt;
        &lt;p&gt;In the second example, there are no solutions. Note that
        &lt;tt class=&quot;ttfamily&quot;&gt;LRLR&lt;/tt&gt; is not valid, because it would
        involve the right tree growing backward, from left to
        right.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        1 2
        2 5
        2 3
        1 3
        3 5
        4 5
        3 4
        1 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;LLRRRRLL
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        1 2
        1 2
        1 3
        1 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;impossible
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Cut It Out!</title>
      <link>https://open.kattis.com/problems/cutitout</link>
      <guid>https://open.kattis.com/problems/cutitout</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You are given two convex polygons &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;. It is guaranteed that
        &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; is strictly contained
        inside of &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;You would like to make a sequence of cuts to cut out
        &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; from &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;. To do this, you draw a straight
        line completely through &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; that is incident to one of the
        edges of &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;, which
        separates &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; into two
        pieces. You cut along this line and discard the piece that
        doesn’t contain &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;. You
        repeat this until the piece that you have left is exactly
        B.&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=&quot;/problems/cutitout/file/statement/en/img-0001.jpg&quot;
        alt=&quot;\includegraphics[width=0.8\textwidth ]{cutitout.jpg}&quot;
        style=&quot;width:80.00%&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;The cost of making a cut is equal to the length of the cut
        (i.e. the length of the line through the remainder of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;). Given &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;, find the minimum cost needed to
        cut &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; out.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line containing a single
        integer &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$3 \le a \le 200$&lt;/span&gt;), which is the
        number of points in polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;. Each of the next &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; lines will contain two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$-10^6 \le x,y \le 10^6$&lt;/span&gt;), which are
        the vertices of polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;, in clockwise order. It is
        guaranteed that polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt; will be convex.&lt;/p&gt;
        &lt;p&gt;The next line will contain a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$3
        \le b \le 200$&lt;/span&gt;), which is the number of points in
        polygon &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;. Each of the
        next &lt;span class=&quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; lines will
        contain two integers &lt;span class=&quot;tex2jax_process&quot;&gt;$x$&lt;/span&gt;
        and &lt;span class=&quot;tex2jax_process&quot;&gt;$y$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$-10^6 &amp;lt; x,y &amp;lt; 10^6$&lt;/span&gt;), which are
        the vertices of polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;, in clockwise order. It is
        guaranteed that polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; will be convex. It is also
        guaranteed that polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; will reside entirely within the
        interior of polygon &lt;span class=
        &quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;No three points, within a polygon or across polygons, will
        be collinear.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single floating point number, which is the minimum
        cost to cut &lt;span class=&quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt; out of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$A$&lt;/span&gt;. To be considered
        correct, this number must be within a relative error of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$10^{-6}$&lt;/span&gt; of the judges’
        answer.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        0 0
        0 14
        15 14
        15 0
        4
        8 3
        4 6
        7 10
        11 7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;40.0000000000
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        -100 -100
        -100 100
        100 100
        100 -100
        8
        -1 -2
        -2 -1
        -2 1
        -1 2
        1 2
        2 1
        2 -1
        1 -2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;322.1421356237
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Double Clique</title>
      <link>https://open.kattis.com/problems/doubleclique</link>
      <guid>https://open.kattis.com/problems/doubleclique</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You are given an undirected graph &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt; with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; nodes and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; edges. The set of vertices is
        &lt;span class=&quot;tex2jax_process&quot;&gt;$V$&lt;/span&gt; and the set of edges
        is &lt;span class=&quot;tex2jax_process&quot;&gt;$E$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Let the &lt;i class=&quot;itshape&quot;&gt;Complement&lt;/i&gt; of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt; be &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G’$&lt;/span&gt;. The &lt;i class=
        &quot;itshape&quot;&gt;Complement&lt;/i&gt; of a graph is a graph with all of the
        same nodes, but if there’s no edge between nodes &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;, then there is an edge between
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G’$&lt;/span&gt;, and if there is an edge between
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;, then there is no edge between
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G’$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;A &lt;i class=&quot;itshape&quot;&gt;Clique&lt;/i&gt; is a subset of nodes that
        have an edge between every pair. A subset of nodes &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; is called a &lt;i class=
        &quot;itshape&quot;&gt;Double Clique&lt;/i&gt; if &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; forms a clique in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$V-S$&lt;/span&gt; forms a clique in &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G’$&lt;/span&gt;. Note that an empty set of nodes
        is considered a clique.&lt;/p&gt;
        &lt;p&gt;Given a graph, count the number of double cliques in the
        graph modulo &lt;span class=&quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n,m \le 2 \times 10^5$&lt;/span&gt;), where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of nodes and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; is the number of edges
        in the graph. The nodes are numbered &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt;. Each of the next &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; lines will contain two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le a &amp;lt;b \le n$&lt;/span&gt;), representing an edge between nodes
        &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt;. The edges are guaranteed to be
        unique.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single integer, which is the number of Double
        Cliques in the graph modulo &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 3
        1 3
        1 2
        2 3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Flashing Fluorescents</title>
      <link>https://open.kattis.com/problems/flashingfluorescents</link>
      <guid>https://open.kattis.com/problems/flashingfluorescents</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You have &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; lights,
        each with its own button, in a line. Pressing a light’s button
        will toggle that light’s state; if the light is on, it will
        turn off, and if the light is off, it will turn on. The lights
        change at &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; second
        timesteps. You can press a button at any time, but it will not
        take effect until the next timestep. Before each timestep, you
        may choose to push at most one button (you may also choose to
        not press any button).&lt;/p&gt;
        &lt;p&gt;Pushing a button will affect not just the light in question,
        but all lights down the line. More specifically, if you choose
        to press the &lt;span class=&quot;tex2jax_process&quot;&gt;$i^\textrm
        {th}$&lt;/span&gt; button right before the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k^\textrm {th}$&lt;/span&gt; timestep, then the
        &lt;span class=&quot;tex2jax_process&quot;&gt;$(i+m)^\textrm {th}$&lt;/span&gt; light
        will toggle on the &lt;span class=&quot;tex2jax_process&quot;&gt;$(k+m)^\textrm
        {th}$&lt;/span&gt; timestep (with &lt;span class=&quot;tex2jax_process&quot;&gt;$i+m
        \le n$&lt;/span&gt;). For example, if you press button &lt;span class=
        &quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt; just before time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$19$&lt;/span&gt;, then light &lt;span class=
        &quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt; will toggle at time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$19$&lt;/span&gt;, light &lt;span class=
        &quot;tex2jax_process&quot;&gt;$6$&lt;/span&gt; will toggle at time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$20$&lt;/span&gt;, light &lt;span class=
        &quot;tex2jax_process&quot;&gt;$7$&lt;/span&gt; will toggle at time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$21$&lt;/span&gt;, and so on. If you push a button
        that will take effect at the same time as its light would have
        toggled due to an earlier button press, then the two cancel
        each other out, including subsequent toggles.&lt;/p&gt;
        &lt;p&gt;Suppose there are three lights, all of which are off at the
        start. If you press the first button before the first timestep,
        this will happen in three timesteps:&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/flashingfluorescents/file/statement/en/img-0001.jpg&quot;
        alt=&quot;\includegraphics[width=0.7\textwidth ]{flashing1.jpg}&quot;
        style=&quot;width:70.00%&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;Now, suppose you press the first button before the first
        timestep, and then the second button between the first and
        second timesteps. The button press will cancel out the
        propagation, and this will happen (note that the propagation
        will go no further):&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/flashingfluorescents/file/statement/en/img-0002.jpg&quot;
        alt=&quot;\includegraphics[width=0.7\textwidth ]{flashing2.jpg}&quot;
        style=&quot;width:70.00%&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;&lt;br&gt;
        Now, suppose you press the first button before the first
        timestep, and then the third button between the first and
        second timesteps. All three lights will be on at the second
        timestep (but not the third):&lt;/p&gt;
        &lt;center&gt;
        &lt;img src=
        &quot;/problems/flashingfluorescents/file/statement/en/img-0003.jpg&quot;
        alt=&quot;\includegraphics[width=0.7\textwidth ]{flashing3.jpg}&quot;
        style=&quot;width:70.00%&quot;&gt;
        &lt;/center&gt;
        &lt;p&gt;You wish to turn on all the lights. What is the earliest
        time you could possibly see all of the lights turned on? Note
        that if the lights are all on at time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$t$&lt;/span&gt; but not at time &lt;span class=
        &quot;tex2jax_process&quot;&gt;$t+1$&lt;/span&gt; due to this propagation,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$t$&lt;/span&gt; is still the correct
        answer.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will consist of a single string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le |S| \le 16$&lt;/span&gt;). The string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$S$&lt;/span&gt; will contain only the characters
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;, where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; represents that that light is
        initially on, and &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;
        represents that that light is initially off. The first
        character is light &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;,
        the next is light &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, and
        so on.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single integer, which is the earliest time at which
        all of the lights are on.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;1101
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;000
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Missing Gnomes</title>
      <link>https://open.kattis.com/problems/missinggnomes</link>
      <guid>https://open.kattis.com/problems/missinggnomes</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;A family of &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; gnomes
        likes to line up for a group picture. Each gnome can be
        uniquely identified by a number &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt; written on their hat.&lt;/p&gt;
        &lt;p&gt;Suppose there are &lt;span class=&quot;tex2jax_process&quot;&gt;$5$&lt;/span&gt;
        gnomes. The gnomes could line up like so: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1, 3, 4, 2, 5$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Now, an evil magician will remove some of the gnomes from
        the lineup and wipe your memory of the order of the gnomes. The
        result is a subsequence, perhaps like so: &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1, 4, 2$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;He then tells you that if you ordered all permutations of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt; in lexicographical
        order, the original sequence of gnomes is the first such
        permutation which contains the remaining subsequence. Your task
        is to find the original sequence of gnomes.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and then &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le m \le n \le 10^5$&lt;/span&gt;), where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of gnomes
        originally, and &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; is the
        number of gnomes remaining after the evil magician pulls his
        trick. Each of the next &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; lines will contain a single
        integer &lt;span class=&quot;tex2jax_process&quot;&gt;$g$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le g \le n$&lt;/span&gt;). These are the
        remaining gnomes, in order. The values of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$g$&lt;/span&gt; are guaranteed to be unique.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; lines, each
        containing a single integer, representing the first permutation
        of gnomes that could contain the remaining gnomes in order.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 3
        1
        4
        2
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        3
        4
        2
        5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;7 4
        6
        4
        2
        1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;3
        5
        6
        4
        2
        1
        7
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Prefix Free Code</title>
      <link>https://open.kattis.com/problems/prefixfreecode</link>
      <guid>https://open.kattis.com/problems/prefixfreecode</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Consider &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; initial
        strings of lower case letters, where no initial string is a
        prefix of any other initial string. Now, consider choosing
        &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; of the strings (no
        string more than once), and concatenating them together. You
        can make this many such composite strings:&lt;/p&gt;
        &lt;center&gt;
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n \times (n-1) \times (n-2)
        \times \ldots \times (n-k+1)$&lt;/span&gt;
        &lt;/center&gt;
        &lt;p&gt;Consider sorting all of the composite strings you can get
        via this process in alphabetical order. You are given a test
        composite string, which is guaranteed to belong on this list.
        Find the position of this test composite string in the
        alphabetized list of all composite strings, modulo &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;. The first composite string
        in the list is at position &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with two integers, first
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and then &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le k \le n$&lt;/span&gt;), where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of initial strings,
        and &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; is the number of
        initial strings you choose to form composite strings. The upper
        bounds of &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; are limited by the
        constraints on the strings, in the following paragraphs.&lt;/p&gt;
        &lt;p&gt;Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;
        lines will contain a string, which will consist of one or more
        lower case letters &lt;span class=&quot;tex2jax_process&quot;&gt;$a..z$&lt;/span&gt;.
        These are the &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; initial
        strings. It is guaranteed that none of the initial strings will
        be a prefix of any other of the initial strings.&lt;/p&gt;
        &lt;p&gt;Finally, the last line will contain another string,
        consisting of only lower case letters &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a..z$&lt;/span&gt;. This is the test composite
        string, the position of which in the sorted list you must find.
        This test composite string is guaranteed to be a concatenation
        of &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; unique initial
        strings.&lt;/p&gt;
        &lt;p&gt;The sum of the lengths of all input strings, including the
        test string, will not exceed &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^6$&lt;/span&gt; letters.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output a single integer, which is the position in the list
        of sorted composite strings where the test composite string
        occurs. Output this number modulo &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 3
        a
        b
        c
        d
        e
        cad
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;26
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;8 8
        font
        lewin
        darko
        deon
        vanb
        johnb
        chuckr
        tgr
        deonjohnbdarkotgrvanbchuckrfontlewin
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;12451
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Probe Droids</title>
      <link>https://open.kattis.com/problems/probedroids</link>
      <guid>https://open.kattis.com/problems/probedroids</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;After being stationed on Hoth, you’ve decided that this is
        the worst decision you have ever made. The planet is cold,
        there is nothing to do, and to make matters worse, the Empire
        keeps sending probe droids down to see if anyone is hiding on
        the planet. At least you can do something about the probe
        droids!&lt;/p&gt;
        &lt;p&gt;The field near your base is covered with these droids in a
        uniform fashion. Your base has a turret in the southwest
        (bottom-left) corner of the field, at location &lt;span class=
        &quot;tex2jax_process&quot;&gt;$(1,1)$&lt;/span&gt;. Each remaining lattice point
        (points with integer coordinates) on the grid of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n \times m$&lt;/span&gt; points contains a
        droid.&lt;/p&gt;
        &lt;p&gt;An example &lt;span class=&quot;tex2jax_process&quot;&gt;$3 \times 5$&lt;/span&gt;
        grid:&lt;/p&gt;
        &lt;center&gt;
        &lt;big class=&quot;xhuge&quot;&gt;&lt;span class=
        &quot;tex2jax_process&quot;&gt;$\begin{matrix} \bowtie &amp;amp; \bowtie &amp;amp;
        \bowtie &amp;amp; \bowtie &amp;amp; \bowtie \\ \bowtie &amp;amp; \bowtie
        &amp;amp; \bowtie &amp;amp; \bowtie &amp;amp; \bowtie \\ \odot \mkern
        -14mu= &amp;amp; \bowtie &amp;amp; \bowtie &amp;amp; \bowtie &amp;amp;
        \bowtie \end{matrix}$&lt;/span&gt;&lt;/big&gt;
        &lt;/center&gt;
        &lt;p&gt;Note that row &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; is at
        the bottom, row &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is at
        the top, column &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; on the
        left and column &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; on the
        right.&lt;/p&gt;
        &lt;p&gt;Your base is at coordinate (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1,1$&lt;/span&gt;), while the droids are at all
        positive coordinates in the range (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt;,&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1..m$&lt;/span&gt;), excluding (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1,1$&lt;/span&gt;) of course. Your base has a
        turret on it facing east, towards higher-number columns in row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;. You’ve programmed the
        turret to operate in the following way: If a droid is its line
        of sight, then destroy the droid. Otherwise, rotate
        counter-clockwise until the turret can see a droid. Keep going
        until all droids are destroyed.&lt;/p&gt;
        &lt;p&gt;Your task is to figure out the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; droid destroyed when
        the turret executes your algorithm.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with three integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n,m \le 10^6$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; cannot both be &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$q$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le q \le 100$&lt;/span&gt;), where the grid has &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; rows and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; columns, and there will be
        &lt;span class=&quot;tex2jax_process&quot;&gt;$q$&lt;/span&gt; queries to answer.
        Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$q$&lt;/span&gt; lines
        will have a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le i &amp;lt; n \times m$&lt;/span&gt;), which is a query for the
        &lt;span class=&quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; droid
        destroyed.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output &lt;span class=&quot;tex2jax_process&quot;&gt;$q$&lt;/span&gt; lines,
        corresponding to the &lt;span class=&quot;tex2jax_process&quot;&gt;$q$&lt;/span&gt;
        queries in order. For each query, output two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt;, separated by a single space,
        which represent the row (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt;) and column (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt;) of the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$i^\textrm {th}$&lt;/span&gt; droid destroyed.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;3 5 3
        1
        14
        8
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1 2
        3 1
        3 5
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Rainbow Graph</title>
      <link>https://open.kattis.com/problems/rainbowgraph</link>
      <guid>https://open.kattis.com/problems/rainbowgraph</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Roy and Biv have an undirected graph with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; nodes, numbered &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt;. Each edge of the graph has a
        weight and a color. Weights are positive integers. There are
        exactly three colors of edges: Red, Green, and Blue. There may
        be multiple edges between the same two vertices, and there may
        even be self-loops in the graph.&lt;/p&gt;
        &lt;p&gt;For a fixed positive integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt;, consider the following task: Roy
        and Biv want to choose exactly &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; edges of their graph and erase all
        other edges. They want to do this in such a way that when they
        look at the graph with just the &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; edges they have chosen, they will
        both see that the entire graph is connected.&lt;/p&gt;
        &lt;p&gt;However, there is a catch: Roy cannot see the color Red and
        Biv cannot see the color Blue. Therefore, they have to choose
        the edges in such a way that the Blue and Green edges are
        enough to connect all nodes, and also the Red and Green edges
        are enough to connect all nodes. What is the minimum combined
        weights for all of the edges which will allow both Roy and Biv
        to see the graph as connected, for all values of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; from &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; to the total number of edges?&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with two integers,
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le n,m \le 100$&lt;/span&gt;), where &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of nodes in the
        graph, and &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; is the
        number of edges.&lt;/p&gt;
        &lt;p&gt;Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt;
        lines will contain three integers and a character, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt;, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le a,b \le n$&lt;/span&gt;), &lt;span class=
        &quot;tex2jax_process&quot;&gt;$w$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le w \le 1\, 000$&lt;/span&gt;) and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$c
        \in \{ R,G,B\} $&lt;/span&gt;), which represents an edge between
        nodes &lt;span class=&quot;tex2jax_process&quot;&gt;$a$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$b$&lt;/span&gt; with weight &lt;span class=
        &quot;tex2jax_process&quot;&gt;$w$&lt;/span&gt;, and color &lt;span class=
        &quot;tex2jax_process&quot;&gt;$c$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt;=Red, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$G$&lt;/span&gt;=Green, &lt;span class=
        &quot;tex2jax_process&quot;&gt;$B$&lt;/span&gt;=Blue).&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; lines, with
        each line representing a result for &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k=1..m$&lt;/span&gt; in order. If it is not
        possible for both Roy and Biv to see the graph as connected,
        output &lt;span class=&quot;tex2jax_process&quot;&gt;$-1$&lt;/span&gt; for that value
        of &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt;. Otherwise, output
        the minimum sum of edge weights for a subset of &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; edges which will allow both Roy
        and Biv to see the graph as connected.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;5 8
        1 5 1 R
        2 1 2 R
        5 4 5 R
        4 5 3 G
        1 3 3 G
        4 3 5 G
        5 4 1 B
        1 2 2 B
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;-1
        -1
        -1
        -1
        15
        14
        17
        22
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Recovery</title>
      <link>https://open.kattis.com/problems/recovery</link>
      <guid>https://open.kattis.com/problems/recovery</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;Consider an &lt;span class=&quot;tex2jax_process&quot;&gt;$n \times
        m$&lt;/span&gt; matrix of ones and zeros. For example, this
        &lt;span class=&quot;tex2jax_process&quot;&gt;$4 \times 4$&lt;/span&gt;:&lt;/p&gt;
        &lt;center&gt;
        &lt;span class=&quot;tex2jax_process&quot;&gt;$\begin{matrix} 1 &amp;amp; 1 &amp;amp;
        1 &amp;amp; 1 \\ 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 1 \\ 0 &amp;amp; 1 &amp;amp; 1
        &amp;amp; 1 \\ 0 &amp;amp; 1 &amp;amp; 1 &amp;amp; 0 \end{matrix}$&lt;/span&gt;
        &lt;/center&gt;
        &lt;p&gt;We can compute even parity for each row, and each column. In
        this case, the row parities are &lt;span class=
        &quot;tex2jax_process&quot;&gt;$[0, 1, 1, 0]$&lt;/span&gt; and the column parities
        are &lt;span class=&quot;tex2jax_process&quot;&gt;$[1, 0, 0, 1]$&lt;/span&gt; (the
        parity is &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; if there is
        an odd number of &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;s in
        the row or column, &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; if
        the number of &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;s is
        even). Note that the top row is row &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, the bottom row is row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt;, the leftmost column
        is column &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, and the
        rightmost column is column &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Suppose we lost the original matrix, and only have the row
        and column parities. Can we recover the original matrix?
        Unfortunately, we cannot uniquely recover the original matrix,
        but with some constraints, we can uniquely recover a matrix
        that fits the bill. Firstly, the recovered matrix must contain
        as many &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;’s as possible.
        Secondly, of all possible recovered matrices with the most
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;’s, use the one which
        has the smallest binary value when you start with row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, concatenate row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt; to the end of row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, then append row
        &lt;span class=&quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;, row &lt;span class=
        &quot;tex2jax_process&quot;&gt;$4$&lt;/span&gt;, and so on.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will consist of exactly two lines. The first
        line will contain a string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$R$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le |R| \le 50$&lt;/span&gt;), consisting only of the characters
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;. These are the row parities, in
        order. The second line will contain a string &lt;span class=
        &quot;tex2jax_process&quot;&gt;$C$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le |C| \le 50$&lt;/span&gt;), consisting only of the characters
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt; and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;. These are the column parities, in
        order.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;If it is possible to recover the original matrix with the
        given constraints, then output the matrix as &lt;span class=
        &quot;tex2jax_process&quot;&gt;$|R|$&lt;/span&gt; lines of exactly &lt;span class=
        &quot;tex2jax_process&quot;&gt;$|C|$&lt;/span&gt; characters, consisting only of
        &lt;span class=&quot;tex2jax_process&quot;&gt;$0$&lt;/span&gt;’s and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;’s. If it is not possible to
        recover the original matrix, output &lt;span class=
        &quot;tex2jax_process&quot;&gt;$-1$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;0110
        1001
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1111
        0111
        1110
        1111
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;0
        1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;-1
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;11
        0110
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1011
        1101
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
    <item>
      <title>Red Black Tree</title>
      <link>https://open.kattis.com/problems/redblacktree</link>
      <guid>https://open.kattis.com/problems/redblacktree</guid>
      <pubDate>Sat, 24 Mar 2018 18:00:00 +0100</pubDate>
      <description>

        &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/system.css&quot;&gt;

        &lt;div class=&quot;problembody&quot;&gt;
        &lt;p&gt;You are given a rooted tree with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; nodes. The nodes are numbered
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt;. The root is node
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt;, and &lt;span class=
        &quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; of the nodes are colored red, the
        rest are black.&lt;/p&gt;
        &lt;p&gt;You would like to choose a subset of nodes such that there
        is no node in your subset which is an ancestor of any other
        node in your subset. For example, if A is the parent of B and B
        is the parent of C, then you could have at most one of A, B or
        C in your subset. In addition, you would like exactly
        &lt;span class=&quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; of your chosen nodes
        to be red.&lt;/p&gt;
        &lt;p&gt;If exactly &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; of the
        nodes are red, then for all &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k=0..m$&lt;/span&gt;, figure out how many ways you
        can choose subsets with &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k$&lt;/span&gt; red nodes, and no node is an
        ancestor of any other node.&lt;/p&gt;
        &lt;h2&gt;Input&lt;/h2&gt;
        &lt;p&gt;Each input will consist of a single test case. Note that
        your program may be run multiple times on different inputs.
        Each test case will begin with a line with two integers
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$1 \le n \le 2 \times 10^5$&lt;/span&gt;) and
        &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; (&lt;span class=
        &quot;tex2jax_process&quot;&gt;$0 \le m \le min(10^3,\ n)$&lt;/span&gt;), where
        &lt;span class=&quot;tex2jax_process&quot;&gt;$n$&lt;/span&gt; is the number of nodes
        in the tree, and &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt; is
        the number of nodes which are red. The nodes are numbered
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1..n$&lt;/span&gt;.&lt;/p&gt;
        &lt;p&gt;Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$n-1$&lt;/span&gt;
        lines will contain a single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$p$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le p \le n$&lt;/span&gt;), which is the number of the parent of this
        node. The nodes are listed in order, starting with node
        &lt;span class=&quot;tex2jax_process&quot;&gt;$2$&lt;/span&gt;, then node
        &lt;span class=&quot;tex2jax_process&quot;&gt;$3$&lt;/span&gt;, and so on. Node
        &lt;span class=&quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; is skipped, since it
        is the root. It is guaranteed that the nodes form a single
        tree, with a single root at node &lt;span class=
        &quot;tex2jax_process&quot;&gt;$1$&lt;/span&gt; and no cycles.&lt;/p&gt;
        &lt;p&gt;Each of the next &lt;span class=&quot;tex2jax_process&quot;&gt;$m$&lt;/span&gt;
        lines will contain single integer &lt;span class=
        &quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; (&lt;span class=&quot;tex2jax_process&quot;&gt;$1
        \le r \le n$&lt;/span&gt;). These are the numbers of the red nodes.
        No value of &lt;span class=&quot;tex2jax_process&quot;&gt;$r$&lt;/span&gt; will be
        repeated.&lt;/p&gt;
        &lt;h2&gt;Output&lt;/h2&gt;
        &lt;p&gt;Output &lt;span class=&quot;tex2jax_process&quot;&gt;$m+1$&lt;/span&gt; lines,
        corresponding to the number of subsets satisfying the given
        criteria with a number of red nodes equal to &lt;span class=
        &quot;tex2jax_process&quot;&gt;$k=0..m$&lt;/span&gt;, in that order. Output this
        number modulo &lt;span class=
        &quot;tex2jax_process&quot;&gt;$10^9+7$&lt;/span&gt;.&lt;/p&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 1&lt;/th&gt;
        &lt;th&gt;Sample Output 1&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 1
        1
        1
        1
        3
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;5
        4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 2&lt;/th&gt;
        &lt;th&gt;Sample Output 2&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;4 4
        1
        1
        1
        1
        2
        3
        4
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;1
        4
        3
        1
        0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;table class=&quot;sample&quot; summary=&quot;sample data&quot;&gt;
        &lt;tr&gt;
        &lt;th&gt;Sample Input 3&lt;/th&gt;
        &lt;th&gt;Sample Output 3&lt;/th&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
        &lt;td&gt;
        &lt;pre&gt;14 4
        1
        2
        1
        2
        3
        4
        5
        5
        13
        8
        10
        4
        4
        8
        3
        12
        13
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;td&gt;
        &lt;pre&gt;100
        169
        90
        16
        0
        &lt;/pre&gt;
        &lt;/td&gt;
        &lt;/tr&gt;
        &lt;/table&gt;
        &lt;/div&gt;

      </description>
    </item>
  </channel>
</rss>
